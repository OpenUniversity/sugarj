module ModelDrivenTransformation

imports org/sugarj/languages/Model
        org/sugarj/languages/Java 
        org/sugarj/languages/Stratego
        org/sugarj/languages/SugarJ

rules
  desugar = changed-tree(transformation-to-sugar)

  transformation-to-sugar :
  	TransDec(TransDecHead(mods, Id(name)), TransBody(body))
    ->
    SugarDec(SugarDecHead(mods, Id(name)), SugarBody(sugarbody))
    where
      <rename-main-rules(|name)> body => sugarbody

  rename-main-rules(|unqualified-name) = ?body; 
    (prim("SUGARJ_current_package") <+ !"") => pkg;
    <string-as-chars(map(try(?'/';!'_')))> pkg => pkg';
    <conc-strings> ("main", "-", pkg', "_", unqualified-name) => qualified-name;
    <rename-rules(|"main", qualified-name)> body => sugarbody
  
  rename-rules(|oname, nname) = topdown(try(rename-rule(|oname, nname))); topdown(try(SVar(?oname;!nname)))
  
  rename-rule(|oname, nname) :
    RDefNoArgs(oname, rule) -> RDefNoArgs(nname, rule)
    
  rename-rule(|oname, nname) :
    RDef(oname, typeids, rule) -> RDef(nname, typeids, rule)
    
  rename-rule(|oname, nname) :
  	RDefT(oname, typeids1,typeids2, rule ) -> RDefT(nname, typeids1, typeids2, rule)
  	
  rename-rule(|oname, nname) :
  	SDefNoArgs(oname, strategy) -> SDefNoArgs(nname, strategy)
  	
  rename-rule(|oname, nname) :
  	SDef(oname, typeids, strategy) -> SDef(nname, typeids, strategy)

    
/*
 * use 
 *   import libstratego-aterm
 * instead as soon as this bug in STRJ is fixed: http://yellowgrass.org/issue/Spoofax/487
 */
imports org/sugarj/transformations/ATerm 

rules
  desugar : ToModelTerm(t) -> <implode-aterm> t