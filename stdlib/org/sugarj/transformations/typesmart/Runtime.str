module org/sugarj/transformations/typesmart/Runtime

imports org/sugarj/transformations/Analyze
        org/sugarj/languages/Stratego

rules
  put-syntax-sort(|sort) =
    (where(get-analysis-data-annotation) <+ init-analysis-data-annotation);
    put-anno(|"syntax-sort", sort);
    where(get-syntax-sort)
  get-syntax-sort =
    get-anno(|"syntax-sort")
  has-syntax-sort =
    where(get-syntax-sort)

rules
  has-sort = ?([], Sort("List", _))
  has-sort = ?(None(), Sort("Option", _))
  has-sort = ?(Some(x), Sort("Option", [xsort]));
             !(x, xsort);
             has-sort
  has-sort = (get-syntax-sort, id); is-subsort-of
  
  is-subsort-of = is-subsort-of-refl
  is-subsort-of-refl = structurally-equal
  is-subsort-of-inject(|arg-sort,res-sort) =
      ?(sub-sort,sup-sort)
    ; <structurally-equal> (sub-sort, arg-sort) 
    ; ( <structurally-equal> (sup-sort, res-sort)
     <+ <is-subsort-of> (res-sort, sup-sort)) 

rules
  log-mismatching-sort-error =
    (not(get-syntax-sort), id);
    debug(!"Constructor argument lacks sort annotation: ")
  
  log-mismatching-sort-error(|cons) =
    (get-syntax-sort, id);
    ?(was, exp);
    where(<conc-strings> 
            ("Mismatching argument sort for constructor '", cons, "'.",
             " Was ", <write-to-string> was, ",",
             " expected ", <write-to-string> exp) => s);
    <debug(!s)> "."
  
