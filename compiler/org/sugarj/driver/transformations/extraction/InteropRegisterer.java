package org.sugarj.driver.transformations.extraction;

import org.strategoxt.stratego_lib.*;
import org.strategoxt.lang.*;
import org.spoofax.interpreter.terms.*;
import static org.strategoxt.lang.Term.*;
import org.spoofax.interpreter.library.AbstractPrimitive;
import java.util.ArrayList;
import java.lang.ref.WeakReference;

@SuppressWarnings("unused") public class InteropRegisterer extends org.strategoxt.lang.InteropRegisterer 
{ 
  @Override public void register(org.spoofax.interpreter.core.IContext context, Context compiledContext)
  { 
    register(context, compiledContext, context.getVarScope());
  }

  @Override public void registerLazy(org.spoofax.interpreter.core.IContext context, Context compiledContext, ClassLoader classLoader)
  { 
    registerLazy(context, compiledContext, classLoader, context.getVarScope());
  }

  private void register(org.spoofax.interpreter.core.IContext context, Context compiledContext, org.spoofax.interpreter.core.VarScope varScope)
  { 
    register0(context, compiledContext, varScope);
    varScope.addSVar("LChoice_2_0", new InteropSDefT($L$Choice_2_0.instance, context));
    varScope.addSVar("Rec_2_0", new InteropSDefT($Rec_2_0.instance, context));
    varScope.addSVar("Not_1_0", new InteropSDefT($Not_1_0.instance, context));
    varScope.addSVar("Where_1_0", new InteropSDefT($Where_1_0.instance, context));
    varScope.addSVar("With_1_0", new InteropSDefT($With_1_0.instance, context));
    varScope.addSVar("Test_1_0", new InteropSDefT($Test_1_0.instance, context));
    varScope.addSVar("PrimNoArgs_1_0", new InteropSDefT($Prim$No$Args_1_0.instance, context));
    varScope.addSVar("Prim_2_0", new InteropSDefT($Prim_2_0.instance, context));
    varScope.addSVar("StrCong_1_0", new InteropSDefT($Str$Cong_1_0.instance, context));
    varScope.addSVar("IntCong_1_0", new InteropSDefT($Int$Cong_1_0.instance, context));
    varScope.addSVar("RealCong_1_0", new InteropSDefT($Real$Cong_1_0.instance, context));
    varScope.addSVar("CharCong_1_0", new InteropSDefT($Char$Cong_1_0.instance, context));
    varScope.addSVar("CongQ_2_0", new InteropSDefT($Cong$Q_2_0.instance, context));
    varScope.addSVar("AnnoCong_2_0", new InteropSDefT($Anno$Cong_2_0.instance, context));
    varScope.addSVar("StrategyCurly_1_0", new InteropSDefT($Strategy$Curly_1_0.instance, context));
    varScope.addSVar("EmptyTupleCong_0_0", new InteropSDefT($Empty$Tuple$Cong_0_0.instance, context));
    varScope.addSVar("TupleCong_2_0", new InteropSDefT($Tuple$Cong_2_0.instance, context));
    varScope.addSVar("ListCongNoTail_1_0", new InteropSDefT($List$Cong$No$Tail_1_0.instance, context));
    varScope.addSVar("ListCong_2_0", new InteropSDefT($List$Cong_2_0.instance, context));
    varScope.addSVar("ExplodeCong_2_0", new InteropSDefT($Explode$Cong_2_0.instance, context));
    varScope.addSVar("CallNoArgs_1_0", new InteropSDefT($Call$No$Args_1_0.instance, context));
    varScope.addSVar("LRule_1_0", new InteropSDefT($L$Rule_1_0.instance, context));
    varScope.addSVar("SRule_1_0", new InteropSDefT($S$Rule_1_0.instance, context));
    varScope.addSVar("Choice_2_0", new InteropSDefT($Choice_2_0.instance, context));
    varScope.addSVar("RChoice_2_0", new InteropSDefT($R$Choice_2_0.instance, context));
    varScope.addSVar("CondChoice_3_0", new InteropSDefT($Cond$Choice_3_0.instance, context));
    varScope.addSVar("IfThen_2_0", new InteropSDefT($If$Then_2_0.instance, context));
    varScope.addSVar("SwitchChoiceNoOtherwise_2_0", new InteropSDefT($Switch$Choice$No$Otherwise_2_0.instance, context));
    varScope.addSVar("SwitchChoice_3_0", new InteropSDefT($Switch$Choice_3_0.instance, context));
    varScope.addSVar("SwitchCase_2_0", new InteropSDefT($Switch$Case_2_0.instance, context));
    varScope.addSVar("Assign_2_0", new InteropSDefT($Assign_2_0.instance, context));
    varScope.addSVar("ListVar_1_0", new InteropSDefT($List$Var_1_0.instance, context));
    varScope.addSVar("Var_1_0", new InteropSDefT($Var_1_0.instance, context));
    varScope.addSVar("BuildDefaultPT_1_0", new InteropSDefT($Build$Default$P$T_1_0.instance, context));
    varScope.addSVar("BuildDefault_1_0", new InteropSDefT($Build$Default_1_0.instance, context));
    varScope.addSVar("Char_1_0", new InteropSDefT($Char_1_0.instance, context));
    varScope.addSVar("AnnoList_2_0", new InteropSDefT($Anno$List_2_0.instance, context));
    varScope.addSVar("NoAnnoList_1_0", new InteropSDefT($No$Anno$List_1_0.instance, context));
    varScope.addSVar("App_2_0", new InteropSDefT($App_2_0.instance, context));
    varScope.addSVar("RootApp_1_0", new InteropSDefT($Root$App_1_0.instance, context));
    varScope.addSVar("Tuple_1_0", new InteropSDefT($Tuple_1_0.instance, context));
    varScope.addSVar("List_1_0", new InteropSDefT($List_1_0.instance, context));
    varScope.addSVar("ListTail_2_0", new InteropSDefT($List$Tail_2_0.instance, context));
    varScope.addSVar("Explode_2_0", new InteropSDefT($Explode_2_0.instance, context));
    varScope.addSVar("As_2_0", new InteropSDefT($As_2_0.instance, context));
    varScope.addSVar("SortList_1_0", new InteropSDefT($Sort$List_1_0.instance, context));
    varScope.addSVar("SortListTl_2_0", new InteropSDefT($Sort$List$Tl_2_0.instance, context));
    varScope.addSVar("SortTuple_1_0", new InteropSDefT($Sort$Tuple_1_0.instance, context));
    varScope.addSVar("Star_0_0", new InteropSDefT($Star_0_0.instance, context));
    varScope.addSVar("StarStar_0_0", new InteropSDefT($Star$Star_0_0.instance, context));
    varScope.addSVar("Sorts_1_0", new InteropSDefT($Sorts_1_0.instance, context));
    varScope.addSVar("Constructors_1_0", new InteropSDefT($Constructors_1_0.instance, context));
    varScope.addSVar("SortVar_1_0", new InteropSDefT($Sort$Var_1_0.instance, context));
    varScope.addSVar("SortNoArgs_1_0", new InteropSDefT($Sort$No$Args_1_0.instance, context));
    varScope.addSVar("Sort_2_0", new InteropSDefT($Sort_2_0.instance, context));
    varScope.addSVar("OpDecl_2_0", new InteropSDefT($Op$Decl_2_0.instance, context));
    varScope.addSVar("OpDeclQ_2_0", new InteropSDefT($Op$Decl$Q_2_0.instance, context));
    varScope.addSVar("OpDeclInj_1_0", new InteropSDefT($Op$Decl$Inj_1_0.instance, context));
    varScope.addSVar("ExtOpDecl_2_0", new InteropSDefT($Ext$Op$Decl_2_0.instance, context));
    varScope.addSVar("ExtOpDeclQ_2_0", new InteropSDefT($Ext$Op$Decl$Q_2_0.instance, context));
    varScope.addSVar("ExtOpDeclInj_1_0", new InteropSDefT($Ext$Op$Decl$Inj_1_0.instance, context));
    varScope.addSVar("ConstType_1_0", new InteropSDefT($Const$Type_1_0.instance, context));
    varScope.addSVar("FunType_2_0", new InteropSDefT($Fun$Type_2_0.instance, context));
    varScope.addSVar("Wld_0_0", new InteropSDefT($Wld_0_0.instance, context));
    varScope.addSVar("Int_1_0", new InteropSDefT($Int_1_0.instance, context));
    varScope.addSVar("Real_1_0", new InteropSDefT($Real_1_0.instance, context));
    varScope.addSVar("Str_1_0", new InteropSDefT($Str_1_0.instance, context));
    varScope.addSVar("Op_2_0", new InteropSDefT($Op_2_0.instance, context));
    varScope.addSVar("OpQ_2_0", new InteropSDefT($Op$Q_2_0.instance, context));
    varScope.addSVar("SVar_1_0", new InteropSDefT($S$Var_1_0.instance, context));
    varScope.addSVar("Let_2_0", new InteropSDefT($Let_2_0.instance, context));
    varScope.addSVar("CallT_3_0", new InteropSDefT($Call$T_3_0.instance, context));
    varScope.addSVar("CallDynamic_3_0", new InteropSDefT($Call$Dynamic_3_0.instance, context));
    varScope.addSVar("SDefT_4_0", new InteropSDefT($S$Def$T_4_0.instance, context));
    varScope.addSVar("ExtSDefInl_4_0", new InteropSDefT($Ext$S$Def$Inl_4_0.instance, context));
    varScope.addSVar("ExtSDef_3_0", new InteropSDefT($Ext$S$Def_3_0.instance, context));
    varScope.addSVar("VarDec_2_0", new InteropSDefT($Var$Dec_2_0.instance, context));
    varScope.addSVar("ParenStrat_1_0", new InteropSDefT($Paren$Strat_1_0.instance, context));
    varScope.addSVar("Fail_0_0", new InteropSDefT($Fail_0_0.instance, context));
    varScope.addSVar("Id_0_0", new InteropSDefT($Id_0_0.instance, context));
    varScope.addSVar("Match_1_0", new InteropSDefT($Match_1_0.instance, context));
    varScope.addSVar("Build_1_0", new InteropSDefT($Build_1_0.instance, context));
    varScope.addSVar("Scope_2_0", new InteropSDefT($Scope_2_0.instance, context));
    varScope.addSVar("GuardedLChoice_3_0", new InteropSDefT($Guarded$L$Choice_3_0.instance, context));
    varScope.addSVar("PrimT_3_0", new InteropSDefT($Prim$T_3_0.instance, context));
    varScope.addSVar("One_1_0", new InteropSDefT($One_1_0.instance, context));
    varScope.addSVar("All_1_0", new InteropSDefT($All_1_0.instance, context));
    varScope.addSVar("ImportTerm_1_0", new InteropSDefT($Import$Term_1_0.instance, context));
    varScope.addSVar("Module_2_0", new InteropSDefT($Module_2_0.instance, context));
    varScope.addSVar("Specification_1_0", new InteropSDefT($Specification_1_0.instance, context));
    varScope.addSVar("ImportWildcard_1_0", new InteropSDefT($Import$Wildcard_1_0.instance, context));
    varScope.addSVar("alias_2_0", new InteropSDefT(alias_2_0.instance, context));
    varScope.addSVar("char_class_1_0", new InteropSDefT(char_class_1_0.instance, context));
    varScope.addSVar("seq_2_0", new InteropSDefT(seq_2_0.instance, context));
    varScope.addSVar("single_1_0", new InteropSDefT(single_1_0.instance, context));
    varScope.addSVar("alt_2_0", new InteropSDefT(alt_2_0.instance, context));
    varScope.addSVar("follow_2_0", new InteropSDefT(follow_2_0.instance, context));
    varScope.addSVar("reject_0_0", new InteropSDefT(reject_0_0.instance, context));
    varScope.addSVar("prefer_0_0", new InteropSDefT(prefer_0_0.instance, context));
    varScope.addSVar("avoid_0_0", new InteropSDefT(avoid_0_0.instance, context));
    varScope.addSVar("quoted_1_0", new InteropSDefT(quoted_1_0.instance, context));
    varScope.addSVar("unquoted_1_0", new InteropSDefT(unquoted_1_0.instance, context));
    varScope.addSVar("label_2_0", new InteropSDefT(label_2_0.instance, context));
    varScope.addSVar("unquoted_fun_1_0", new InteropSDefT(unquoted_fun_1_0.instance, context));
    varScope.addSVar("quoted_fun_1_0", new InteropSDefT(quoted_fun_1_0.instance, context));
    varScope.addSVar("lit_1_0", new InteropSDefT(lit_1_0.instance, context));
    varScope.addSVar("ci_lit_1_0", new InteropSDefT(ci_lit_1_0.instance, context));
    varScope.addSVar("prefix_fun_4_0", new InteropSDefT(prefix_fun_4_0.instance, context));
    varScope.addSVar("kernel_start_symbols_1_0", new InteropSDefT(kernel_start_symbols_1_0.instance, context));
    varScope.addSVar("lexical_start_symbols_1_0", new InteropSDefT(lexical_start_symbols_1_0.instance, context));
    varScope.addSVar("context_free_start_symbols_1_0", new InteropSDefT(context_free_start_symbols_1_0.instance, context));
    varScope.addSVar("sort_1_0", new InteropSDefT(sort_1_0.instance, context));
    varScope.addSVar("parameterized_sort_2_0", new InteropSDefT(parameterized_sort_2_0.instance, context));
    varScope.addSVar("numeric_1_0", new InteropSDefT(numeric_1_0.instance, context));
    varScope.addSVar("short_1_0", new InteropSDefT(short_1_0.instance, context));
    varScope.addSVar("top_0_0", new InteropSDefT(top_0_0.instance, context));
    varScope.addSVar("eof_0_0", new InteropSDefT(eof_0_0.instance, context));
    varScope.addSVar("bot_0_0", new InteropSDefT(bot_0_0.instance, context));
    varScope.addSVar("label__start_0_0", new InteropSDefT(label__start_0_0.instance, context));
    varScope.addSVar("range_2_0", new InteropSDefT(range_2_0.instance, context));
    varScope.addSVar("conc_2_0", new InteropSDefT(conc_2_0.instance, context));
    varScope.addSVar("absent_0_0", new InteropSDefT(absent_0_0.instance, context));
    varScope.addSVar("present_1_0", new InteropSDefT(present_1_0.instance, context));
    varScope.addSVar("simple_charclass_1_0", new InteropSDefT(simple_charclass_1_0.instance, context));
    varScope.addSVar("comp_1_0", new InteropSDefT(comp_1_0.instance, context));
    varScope.addSVar("diff_2_0", new InteropSDefT(diff_2_0.instance, context));
    varScope.addSVar("isect_2_0", new InteropSDefT(isect_2_0.instance, context));
    varScope.addSVar("union_2_0", new InteropSDefT(union_2_0.instance, context));
    varScope.addSVar("left_0_0", new InteropSDefT(left_0_0.instance, context));
    varScope.addSVar("right_0_0", new InteropSDefT(right_0_0.instance, context));
    varScope.addSVar("non_assoc_0_0", new InteropSDefT(non_assoc_0_0.instance, context));
    varScope.addSVar("assoc_0_0", new InteropSDefT(assoc_0_0.instance, context));
    varScope.addSVar("bracket_0_0", new InteropSDefT(bracket_0_0.instance, context));
    varScope.addSVar("assoc_1_0", new InteropSDefT(assoc_1_0.instance, context));
    varScope.addSVar("default_1_0", new InteropSDefT(default_1_0.instance, context));
    varScope.addSVar("with_arguments_2_0", new InteropSDefT(with_arguments_2_0.instance, context));
    varScope.addSVar("non_transitive_1_0", new InteropSDefT(non_transitive_1_0.instance, context));
    varScope.addSVar("simple_group_1_0", new InteropSDefT(simple_group_1_0.instance, context));
    varScope.addSVar("prods_group_1_0", new InteropSDefT(prods_group_1_0.instance, context));
    varScope.addSVar("assoc_group_2_0", new InteropSDefT(assoc_group_2_0.instance, context));
    varScope.addSVar("chain_1_0", new InteropSDefT(chain_1_0.instance, context));
    varScope.addSVar("assoc_3_0", new InteropSDefT(assoc_3_0.instance, context));
    varScope.addSVar("lifting_1_0", new InteropSDefT(lifting_1_0.instance, context));
    varScope.addSVar("opt_1_0", new InteropSDefT(opt_1_0.instance, context));
    varScope.addSVar("iter_1_0", new InteropSDefT(iter_1_0.instance, context));
    varScope.addSVar("iter_star_1_0", new InteropSDefT(iter_star_1_0.instance, context));
    varScope.addSVar("iter_sep_2_0", new InteropSDefT(iter_sep_2_0.instance, context));
    varScope.addSVar("iter_star_sep_2_0", new InteropSDefT(iter_star_sep_2_0.instance, context));
    varScope.addSVar("tuple_2_0", new InteropSDefT(tuple_2_0.instance, context));
    varScope.addSVar("func_2_0", new InteropSDefT(func_2_0.instance, context));
    varScope.addSVar("strategy_2_0", new InteropSDefT(strategy_2_0.instance, context));
    varScope.addSVar("renamings_1_0", new InteropSDefT(renamings_1_0.instance, context));
    varScope.addSVar("symbol_2_0", new InteropSDefT(symbol_2_0.instance, context));
    varScope.addSVar("production_2_0", new InteropSDefT(production_2_0.instance, context));
    varScope.addSVar("module_3_0", new InteropSDefT(module_3_0.instance, context));
    varScope.addSVar("exports_1_0", new InteropSDefT(exports_1_0.instance, context));
    varScope.addSVar("hiddens_1_0", new InteropSDefT(hiddens_1_0.instance, context));
    varScope.addSVar("unparameterized_1_0", new InteropSDefT(unparameterized_1_0.instance, context));
    varScope.addSVar("parameterized_2_0", new InteropSDefT(parameterized_2_0.instance, context));
    varScope.addSVar("id_1_0", new InteropSDefT(id_1_0.instance, context));
    varScope.addSVar("imports_1_0", new InteropSDefT(imports_1_0.instance, context));
    varScope.addSVar("imp_section_1_0", new InteropSDefT(imp_section_1_0.instance, context));
    varScope.addSVar("module_1_0", new InteropSDefT(module_1_0.instance, context));
    varScope.addSVar("renamed_module_2_0", new InteropSDefT(renamed_module_2_0.instance, context));
    varScope.addSVar("cf_1_0", new InteropSDefT(cf_1_0.instance, context));
    varScope.addSVar("lex_1_0", new InteropSDefT(lex_1_0.instance, context));
    varScope.addSVar("varsym_1_0", new InteropSDefT(varsym_1_0.instance, context));
    varScope.addSVar("layout_0_0", new InteropSDefT(layout_0_0.instance, context));
    varScope.addSVar("empty_grammar_0_0", new InteropSDefT(empty_grammar_0_0.instance, context));
    varScope.addSVar("conc_grammars_2_0", new InteropSDefT(conc_grammars_2_0.instance, context));
    varScope.addSVar("real_con_3_0", new InteropSDefT(real_con_3_0.instance, context));
    varScope.addSVar("natural_1_0", new InteropSDefT(natural_1_0.instance, context));
    varScope.addSVar("positive_1_0", new InteropSDefT(positive_1_0.instance, context));
    varScope.addSVar("negative_1_0", new InteropSDefT(negative_1_0.instance, context));
    varScope.addSVar("int_1_0", new InteropSDefT(int_1_0.instance, context));
    varScope.addSVar("real_1_0", new InteropSDefT(real_1_0.instance, context));
    varScope.addSVar("fun_1_0", new InteropSDefT(fun_1_0.instance, context));
    varScope.addSVar("appl_2_0", new InteropSDefT(appl_2_0.instance, context));
    varScope.addSVar("placeholder_1_0", new InteropSDefT(placeholder_1_0.instance, context));
    varScope.addSVar("annotated_2_0", new InteropSDefT(annotated_2_0.instance, context));
    varScope.addSVar("term_1_0", new InteropSDefT(term_1_0.instance, context));
    varScope.addSVar("attrs_1_0", new InteropSDefT(attrs_1_0.instance, context));
    varScope.addSVar("no_attrs_0_0", new InteropSDefT(no_attrs_0_0.instance, context));
    varScope.addSVar("prod_3_0", new InteropSDefT(prod_3_0.instance, context));
    varScope.addSVar("start_0_0", new InteropSDefT(start_0_0.instance, context));
    varScope.addSVar("file_start_0_0", new InteropSDefT(file_start_0_0.instance, context));
    varScope.addSVar("definition_1_0", new InteropSDefT(definition_1_0.instance, context));
    varScope.addSVar("PlainDec_2_0", new InteropSDefT($Plain$Dec_2_0.instance, context));
    varScope.addSVar("PlainDecHead_3_0", new InteropSDefT($Plain$Dec$Head_3_0.instance, context));
    varScope.addSVar("PlainBody_1_0", new InteropSDefT($Plain$Body_1_0.instance, context));
    varScope.addSVar("innermost_scope_Subsort_Stack_1_0", new InteropSDefT(innermost_scope_$Subsort_$Stack_1_0.instance, context));
    varScope.addSVar("DYNAMIC__CALLS_0_0", new InteropSDefT($D$Y$N$A$M$I$C__$C$A$L$L$S_0_0.instance, context));
    varScope.addSVar("undefine_Subsort_Stack_0_1", new InteropSDefT(undefine_$Subsort_$Stack_0_1.instance, context));
    varScope.addSVar("throw_Subsort_Stack_1_1", new InteropSDefT(throw_$Subsort_$Stack_1_1.instance, context));
    varScope.addSVar("continue_to_label_Subsort_Stack_0_1", new InteropSDefT(continue_to_label_$Subsort_$Stack_0_1.instance, context));
    varScope.addSVar("continue_Subsort_Stack_0_0", new InteropSDefT(continue_$Subsort_$Stack_0_0.instance, context));
    varScope.addSVar("break_bp_Subsort_Stack_0_0", new InteropSDefT(break_bp_$Subsort_$Stack_0_0.instance, context));
    varScope.addSVar("break_to_label_Subsort_Stack_0_1", new InteropSDefT(break_to_label_$Subsort_$Stack_0_1.instance, context));
    varScope.addSVar("break_Subsort_Stack_0_0", new InteropSDefT(break_$Subsort_$Stack_0_0.instance, context));
    varScope.addSVar("all_keys_Subsort_Stack_0_0", new InteropSDefT(all_keys_$Subsort_$Stack_0_0.instance, context));
    varScope.addSVar("bigfold_Subsort_Stack_1_0", new InteropSDefT(bigfold_$Subsort_$Stack_1_0.instance, context));
    varScope.addSVar("fold_Subsort_Stack_1_0", new InteropSDefT(fold_$Subsort_$Stack_1_0.instance, context));
    varScope.addSVar("bigchain_Subsort_Stack_0_0", new InteropSDefT(bigchain_$Subsort_$Stack_0_0.instance, context));
    varScope.addSVar("chain_Subsort_Stack_0_0", new InteropSDefT(chain_$Subsort_$Stack_0_0.instance, context));
    varScope.addSVar("bigbagof_Subsort_Stack_0_0", new InteropSDefT(bigbagof_$Subsort_$Stack_0_0.instance, context));
    varScope.addSVar("once_Subsort_Stack_0_0", new InteropSDefT(once_$Subsort_$Stack_0_0.instance, context));
    varScope.addSVar("reverse_bagof_Subsort_Stack_1_0", new InteropSDefT(reverse_bagof_$Subsort_$Stack_1_0.instance, context));
    varScope.addSVar("bagof_Subsort_Stack_0_0", new InteropSDefT(bagof_$Subsort_$Stack_0_0.instance, context));
    varScope.addSVar("Subsort_Stack_0_0", new InteropSDefT($Subsort_$Stack_0_0.instance, context));
    varScope.addSVar("aux_Subsort_Stack_0_1", new InteropSDefT(aux_$Subsort_$Stack_0_1.instance, context));
  }

  private void register0(org.spoofax.interpreter.core.IContext context, Context compiledContext, org.spoofax.interpreter.core.VarScope varScope)
  { 
    compiledContext.registerComponent("extraction");
    extraction.init(compiledContext);
    varScope.addSVar("changed_tree_1_0", new InteropSDefT(changed_tree_1_0.instance, context));
    varScope.addSVar("intersect_0_0", new InteropSDefT(intersect_0_0.instance, context));
    varScope.addSVar("contains_all_0_0", new InteropSDefT(contains_all_0_0.instance, context));
    varScope.addSVar("foldl1_1_0", new InteropSDefT(foldl1_1_0.instance, context));
    varScope.addSVar("myfoldr1_2_0", new InteropSDefT(myfoldr1_2_0.instance, context));
    varScope.addSVar("myfoldr1_3_0", new InteropSDefT(myfoldr1_3_0.instance, context));
    varScope.addSVar("desugar_analyze_0_0", new InteropSDefT(desugar_analyze_0_0.instance, context));
    varScope.addSVar("strat_to_analysis_0_0", new InteropSDefT(strat_to_analysis_0_0.instance, context));
    varScope.addSVar("analyze_main_0_0", new InteropSDefT(analyze_main_0_0.instance, context));
    varScope.addSVar("analyze_debug_0_0", new InteropSDefT(analyze_debug_0_0.instance, context));
    varScope.addSVar("start_analysis_0_0", new InteropSDefT(start_analysis_0_0.instance, context));
    varScope.addSVar("init_for_analysis_0_0", new InteropSDefT(init_for_analysis_0_0.instance, context));
    varScope.addSVar("get_analysis_data_annotation_0_0", new InteropSDefT(get_analysis_data_annotation_0_0.instance, context));
    varScope.addSVar("init_analysis_data_annotation_0_0", new InteropSDefT(init_analysis_data_annotation_0_0.instance, context));
    varScope.addSVar("put_analysis_data_annotation_0_1", new InteropSDefT(put_analysis_data_annotation_0_1.instance, context));
    varScope.addSVar("rm_analysis_data_annotation_0_0", new InteropSDefT(rm_analysis_data_annotation_0_0.instance, context));
    varScope.addSVar("rm_empty_analysis_data_annotations_0_0", new InteropSDefT(rm_empty_analysis_data_annotations_0_0.instance, context));
    varScope.addSVar("get_anno_0_1", new InteropSDefT(get_anno_0_1.instance, context));
    varScope.addSVar("put_anno_0_2", new InteropSDefT(put_anno_0_2.instance, context));
    varScope.addSVar("rm_anno_0_1", new InteropSDefT(rm_anno_0_1.instance, context));
    varScope.addSVar("sugarj_analyze_0_0", new InteropSDefT(sugarj_analyze_0_0.instance, context));
    varScope.addSVar("editor_init_0_0", new InteropSDefT(editor_init_0_0.instance, context));
    varScope.addSVar("constraint_error_0_0", new InteropSDefT(constraint_error_0_0.instance, context));
    varScope.addSVar("constraint_warning_0_0", new InteropSDefT(constraint_warning_0_0.instance, context));
    varScope.addSVar("constraint_note_0_0", new InteropSDefT(constraint_note_0_0.instance, context));
    varScope.addSVar("change_annotations_only_1_0", new InteropSDefT(change_annotations_only_1_0.instance, context));
    varScope.addSVar("analysis_data_as_list_0_0", new InteropSDefT(analysis_data_as_list_0_0.instance, context));
    varScope.addSVar("restore_analysis_data_0_0", new InteropSDefT(restore_analysis_data_0_0.instance, context));
    varScope.addSVar("structurally_equal_0_0", new InteropSDefT(structurally_equal_0_0.instance, context));
    varScope.addSVar("nice_analysis_data_term_0_0", new InteropSDefT(nice_analysis_data_term_0_0.instance, context));
    varScope.addSVar("debug_analysis_0_0", new InteropSDefT(debug_analysis_0_0.instance, context));
    varScope.addSVar("debug_analysis_1_0", new InteropSDefT(debug_analysis_1_0.instance, context));
    varScope.addSVar("smart_Some_0_1", new InteropSDefT(smart_$Some_0_1.instance, context));
    varScope.addSVar("put_syntax_sort_0_1", new InteropSDefT(put_syntax_sort_0_1.instance, context));
    varScope.addSVar("get_syntax_sort_0_0", new InteropSDefT(get_syntax_sort_0_0.instance, context));
    varScope.addSVar("has_sort_0_0", new InteropSDefT(has_sort_0_0.instance, context));
    varScope.addSVar("is_lexical_sort_0_0", new InteropSDefT(is_lexical_sort_0_0.instance, context));
    varScope.addSVar("has_subsort_of_0_0", new InteropSDefT(has_subsort_of_0_0.instance, context));
    varScope.addSVar("try_init_subsort_stack_0_0", new InteropSDefT(try_init_subsort_stack_0_0.instance, context));
    varScope.addSVar("push_subsort_stack_0_0", new InteropSDefT(push_subsort_stack_0_0.instance, context));
    varScope.addSVar("pop_subsort_stack_0_0", new InteropSDefT(pop_subsort_stack_0_0.instance, context));
    varScope.addSVar("has_subsort_of_refl_0_0", new InteropSDefT(has_subsort_of_refl_0_0.instance, context));
    varScope.addSVar("has_subsort_unrename_0_0", new InteropSDefT(has_subsort_unrename_0_0.instance, context));
    varScope.addSVar("has_subsort_of_trans_0_0_fragment_0", new InteropSDefT(has_subsort_of_trans_0_0_fragment_0.instance, context));
    varScope.addSVar("has_subsort_of_trans_0_0", new InteropSDefT(has_subsort_of_trans_0_0.instance, context));
    varScope.addSVar("unrename_sort_0_0_fragment_2", new InteropSDefT(unrename_sort_0_0_fragment_2.instance, context));
    varScope.addSVar("unrename_sort_0_0_fragment_1", new InteropSDefT(unrename_sort_0_0_fragment_1.instance, context));
    varScope.addSVar("unrename_sort_0_0_fragment_0", new InteropSDefT(unrename_sort_0_0_fragment_0.instance, context));
    varScope.addSVar("unrename_sort_0_0", new InteropSDefT(unrename_sort_0_0.instance, context));
    varScope.addSVar("has_subsort_of_inject_0_2", new InteropSDefT(has_subsort_of_inject_0_2.instance, context));
    varScope.addSVar("sort_match_0_0", new InteropSDefT(sort_match_0_0.instance, context));
    varScope.addSVar("build_alt_sort_or_fail_0_0", new InteropSDefT(build_alt_sort_or_fail_0_0.instance, context));
    varScope.addSVar("log_mismatching_sort_error_0_1", new InteropSDefT(log_mismatching_sort_error_0_1.instance, context));
    varScope.addSVar("smart_ToModelTerm_0_1", new InteropSDefT(smart_$To$Model$Term_0_1.instance, context));
    varScope.addSVar("smart_TransformationDef_0_2", new InteropSDefT(smart_$Transformation$Def_0_2.instance, context));
    varScope.addSVar("smart_Strategies_0_1", new InteropSDefT(smart_$Strategies_0_1.instance, context));
    varScope.addSVar("smart_Signature_0_1", new InteropSDefT(smart_$Signature_0_1.instance, context));
    varScope.addSVar("smart_Rules_0_1", new InteropSDefT(smart_$Rules_0_1.instance, context));
    varScope.addSVar("smart_Overlays_0_1", new InteropSDefT(smart_$Overlays_0_1.instance, context));
    varScope.addSVar("smart_TransApp_0_2", new InteropSDefT(smart_$Trans$App_0_2.instance, context));
    varScope.addSVar("smart_grammar_elem_0_1", new InteropSDefT(smart_grammar_elem_0_1.instance, context));
    varScope.addSVar("smart_transformation_elem_0_1", new InteropSDefT(smart_transformation_elem_0_1.instance, context));
    varScope.addSVar("smart_sorts_0_1", new InteropSDefT(smart_sorts_0_1.instance, context));
    varScope.addSVar("smart_syntax_0_1", new InteropSDefT(smart_syntax_0_1.instance, context));
    varScope.addSVar("smart_lexical_syntax_0_1", new InteropSDefT(smart_lexical_syntax_0_1.instance, context));
    varScope.addSVar("smart_context_free_syntax_0_1", new InteropSDefT(smart_context_free_syntax_0_1.instance, context));
    varScope.addSVar("smart_variables_0_1", new InteropSDefT(smart_variables_0_1.instance, context));
    varScope.addSVar("smart_lexical_variables_0_1", new InteropSDefT(smart_lexical_variables_0_1.instance, context));
    varScope.addSVar("smart_priorities_0_1", new InteropSDefT(smart_priorities_0_1.instance, context));
    varScope.addSVar("smart_lexical_priorities_0_1", new InteropSDefT(smart_lexical_priorities_0_1.instance, context));
    varScope.addSVar("smart_context_free_priorities_0_1", new InteropSDefT(smart_context_free_priorities_0_1.instance, context));
    varScope.addSVar("smart_restrictions_0_1", new InteropSDefT(smart_restrictions_0_1.instance, context));
    varScope.addSVar("smart_lexical_restrictions_0_1", new InteropSDefT(smart_lexical_restrictions_0_1.instance, context));
    varScope.addSVar("smart_context_free_restrictions_0_1", new InteropSDefT(smart_context_free_restrictions_0_1.instance, context));
    varScope.addSVar("smart_aliases_0_1", new InteropSDefT(smart_aliases_0_1.instance, context));
    varScope.addSVar("smart_Desugarings_0_1", new InteropSDefT(smart_$Desugarings_0_1.instance, context));
    varScope.addSVar("smart_Analyses_0_1", new InteropSDefT(smart_$Analyses_0_1.instance, context));
    varScope.addSVar("smart_PureDesugaring_0_1", new InteropSDefT(smart_$Pure$Desugaring_0_1.instance, context));
    varScope.addSVar("smart_InjectDesugaring_0_4", new InteropSDefT(smart_$Inject$Desugaring_0_4.instance, context));
    varScope.addSVar("smart_Refactorings_0_2", new InteropSDefT(smart_$Refactorings_0_2.instance, context));
    varScope.addSVar("smart_PPTable_0_1", new InteropSDefT(smart_$P$P$Table_0_1.instance, context));
    varScope.addSVar("smart_PrettyPrint_0_1", new InteropSDefT(smart_$Pretty$Print_0_1.instance, context));
    varScope.addSVar("smart_Refactoring_0_4", new InteropSDefT(smart_$Refactoring_0_4.instance, context));
    varScope.addSVar("smart_Builders_0_2", new InteropSDefT(smart_$Builders_0_2.instance, context));
    varScope.addSVar("smart_SemanticObserver_0_1", new InteropSDefT(smart_$Semantic$Observer_0_1.instance, context));
    varScope.addSVar("smart_Builder_0_3", new InteropSDefT(smart_$Builder_0_3.instance, context));
    varScope.addSVar("smart_BuilderCaption_0_1", new InteropSDefT(smart_$Builder$Caption_0_1.instance, context));
    varScope.addSVar("smart_OpenEditor_0_0", new InteropSDefT(smart_$Open$Editor_0_0.instance, context));
    varScope.addSVar("smart_RealTime_0_0", new InteropSDefT(smart_$Real$Time_0_0.instance, context));
    varScope.addSVar("smart_Persistent_0_0", new InteropSDefT(smart_$Persistent_0_0.instance, context));
    varScope.addSVar("smart_Meta_0_0", new InteropSDefT(smart_$Meta_0_0.instance, context));
    varScope.addSVar("smart_Cursor_0_0", new InteropSDefT(smart_$Cursor_0_0.instance, context));
    varScope.addSVar("smart_Source_0_0", new InteropSDefT(smart_$Source_0_0.instance, context));
    varScope.addSVar("smart_Completions_0_2", new InteropSDefT(smart_$Completions_0_2.instance, context));
    varScope.addSVar("smart_CompletionProposer_0_1", new InteropSDefT(smart_$Completion$Proposer_0_1.instance, context));
    varScope.addSVar("smart_IdentifierLexical_0_1", new InteropSDefT(smart_$Identifier$Lexical_0_1.instance, context));
    varScope.addSVar("smart_CompletionKeyword_0_2", new InteropSDefT(smart_$Completion$Keyword_0_2.instance, context));
    varScope.addSVar("smart_CompletionTemplate_0_3", new InteropSDefT(smart_$Completion$Template_0_3.instance, context));
    varScope.addSVar("smart_CompletionTemplateWithSort_0_4", new InteropSDefT(smart_$Completion$Template$With$Sort_0_4.instance, context));
    varScope.addSVar("smart_CompletionTrigger_0_2", new InteropSDefT(smart_$Completion$Trigger_0_2.instance, context));
    varScope.addSVar("smart_Placeholder_0_1", new InteropSDefT(smart_$Placeholder_0_1.instance, context));
    varScope.addSVar("smart_None_0_0", new InteropSDefT(smart_$None_0_0.instance, context));
    varScope.addSVar("smart_Disable_0_0", new InteropSDefT(smart_$Disable_0_0.instance, context));
    varScope.addSVar("smart_Blank_0_0", new InteropSDefT(smart_$Blank_0_0.instance, context));
    varScope.addSVar("smart_References_0_2", new InteropSDefT(smart_$References_0_2.instance, context));
    varScope.addSVar("smart_ReferenceHoverRule_0_3", new InteropSDefT(smart_$Reference$Hover$Rule_0_3.instance, context));
    varScope.addSVar("smart_ReferenceRule_0_2", new InteropSDefT(smart_$Reference$Rule_0_2.instance, context));
    varScope.addSVar("smart_HoverRule_0_2", new InteropSDefT(smart_$Hover$Rule_0_2.instance, context));
    varScope.addSVar("smart_OccurrenceRule_0_2", new InteropSDefT(smart_$Occurrence$Rule_0_2.instance, context));
    varScope.addSVar("smart_Colorer_0_2", new InteropSDefT(smart_$Colorer_0_2.instance, context));
    varScope.addSVar("smart_ColorRuleAll_0_2", new InteropSDefT(smart_$Color$Rule$All_0_2.instance, context));
    varScope.addSVar("smart_ColorRule_0_2", new InteropSDefT(smart_$Color$Rule_0_2.instance, context));
    varScope.addSVar("smart_ColorRuleAllNamed_0_3", new InteropSDefT(smart_$Color$Rule$All$Named_0_3.instance, context));
    varScope.addSVar("smart_ColorRuleNamed_0_3", new InteropSDefT(smart_$Color$Rule$Named_0_3.instance, context));
    varScope.addSVar("smart_Attribute_0_3", new InteropSDefT(smart_$Attribute_0_3.instance, context));
    varScope.addSVar("smart_AttributeRef_0_1", new InteropSDefT(smart_$Attribute$Ref_0_1.instance, context));
    varScope.addSVar("smart_Token_0_1", new InteropSDefT(smart_$Token_0_1.instance, context));
    varScope.addSVar("smart_Literal_0_1", new InteropSDefT(smart_$Literal_0_1.instance, context));
    varScope.addSVar("smart_TK__IDENTIFIER_0_0", new InteropSDefT(smart_$T$K__$I$D$E$N$T$I$F$I$E$R_0_0.instance, context));
    varScope.addSVar("smart_TK__NUMBER_0_0", new InteropSDefT(smart_$T$K__$N$U$M$B$E$R_0_0.instance, context));
    varScope.addSVar("smart_TK__LAYOUT_0_0", new InteropSDefT(smart_$T$K__$L$A$Y$O$U$T_0_0.instance, context));
    varScope.addSVar("smart_TK__STRING_0_0", new InteropSDefT(smart_$T$K__$S$T$R$I$N$G_0_0.instance, context));
    varScope.addSVar("smart_TK__KEYWORD_0_0", new InteropSDefT(smart_$T$K__$K$E$Y$W$O$R$D_0_0.instance, context));
    varScope.addSVar("smart_TK__OPERATOR_0_0", new InteropSDefT(smart_$T$K__$O$P$E$R$A$T$O$R_0_0.instance, context));
    varScope.addSVar("smart_TK__VAR_0_0", new InteropSDefT(smart_$T$K__$V$A$R_0_0.instance, context));
    varScope.addSVar("smart_TK__ERROR_0_0", new InteropSDefT(smart_$T$K__$E$R$R$O$R_0_0.instance, context));
    varScope.addSVar("smart_TK__UNKNOWN_0_0", new InteropSDefT(smart_$T$K__$U$N$K$N$O$W$N_0_0.instance, context));
    varScope.addSVar("smart_NORMAL_0_0", new InteropSDefT(smart_$N$O$R$M$A$L_0_0.instance, context));
    varScope.addSVar("smart_BOLD_0_0", new InteropSDefT(smart_$B$O$L$D_0_0.instance, context));
    varScope.addSVar("smart_ITALIC_0_0", new InteropSDefT(smart_$I$T$A$L$I$C_0_0.instance, context));
    varScope.addSVar("smart_BOLD__ITALIC_0_0", new InteropSDefT(smart_$B$O$L$D__$I$T$A$L$I$C_0_0.instance, context));
    varScope.addSVar("smart_ColorDefault_0_0", new InteropSDefT(smart_$Color$Default_0_0.instance, context));
    varScope.addSVar("smart_ColorRGB_0_3", new InteropSDefT(smart_$Color$R$G$B_0_3.instance, context));
    varScope.addSVar("smart_NoColor_0_0", new InteropSDefT(smart_$No$Color_0_0.instance, context));
    varScope.addSVar("smart_ColorDef_0_2", new InteropSDefT(smart_$Color$Def_0_2.instance, context));
    varScope.addSVar("smart_Outliner_0_2", new InteropSDefT(smart_$Outliner_0_2.instance, context));
    varScope.addSVar("smart_OutlineRule_0_1", new InteropSDefT(smart_$Outline$Rule_0_1.instance, context));
    varScope.addSVar("smart_Folding_0_2", new InteropSDefT(smart_$Folding_0_2.instance, context));
    varScope.addSVar("smart_FoldRule_0_2", new InteropSDefT(smart_$Fold$Rule_0_2.instance, context));
    varScope.addSVar("smart_FoldRuleAll_0_2", new InteropSDefT(smart_$Fold$Rule$All_0_2.instance, context));
    varScope.addSVar("smart_Folded_0_0", new InteropSDefT(smart_$Folded_0_0.instance, context));
    varScope.addSVar("smart_SemanticProvider_0_1", new InteropSDefT(smart_$Semantic$Provider_0_1.instance, context));
    varScope.addSVar("smart_OnSave_0_2", new InteropSDefT(smart_$On$Save_0_2.instance, context));
    varScope.addSVar("smart_Strategy_0_1", new InteropSDefT(smart_$Strategy_0_1.instance, context));
    varScope.addSVar("smart_Attribute_0_1", new InteropSDefT(smart_$Attribute_0_1.instance, context));
    varScope.addSVar("smart_Language_0_2", new InteropSDefT(smart_$Language_0_2.instance, context));
    varScope.addSVar("smart_Values_0_1", new InteropSDefT(smart_$Values_0_1.instance, context));
    varScope.addSVar("smart_LanguageName_0_1", new InteropSDefT(smart_$Language$Name_0_1.instance, context));
    varScope.addSVar("smart_LanguageId_0_1", new InteropSDefT(smart_$Language$Id_0_1.instance, context));
    varScope.addSVar("smart_Extensions_0_1", new InteropSDefT(smart_$Extensions_0_1.instance, context));
    varScope.addSVar("smart_Description_0_1", new InteropSDefT(smart_$Description_0_1.instance, context));
    varScope.addSVar("smart_Table_0_1", new InteropSDefT(smart_$Table_0_1.instance, context));
    varScope.addSVar("smart_TableProvider_0_1", new InteropSDefT(smart_$Table$Provider_0_1.instance, context));
    varScope.addSVar("smart_StartSymbols_0_1", new InteropSDefT(smart_$Start$Symbols_0_1.instance, context));
    varScope.addSVar("smart_URL_0_1", new InteropSDefT(smart_$U$R$L_0_1.instance, context));
    varScope.addSVar("smart_Extends_0_1", new InteropSDefT(smart_$Extends_0_1.instance, context));
    varScope.addSVar("smart_Aliases_0_1", new InteropSDefT(smart_$Aliases_0_1.instance, context));
    varScope.addSVar("smart_UnmanagedTablePrefix_0_1", new InteropSDefT(smart_$Unmanaged$Table$Prefix_0_1.instance, context));
    varScope.addSVar("smart_LineCommentPrefix_0_1", new InteropSDefT(smart_$Line$Comment$Prefix_0_1.instance, context));
    varScope.addSVar("smart_BlockCommentDefs_0_1", new InteropSDefT(smart_$Block$Comment$Defs_0_1.instance, context));
    varScope.addSVar("smart_FenceDefs_0_1", new InteropSDefT(smart_$Fence$Defs_0_1.instance, context));
    varScope.addSVar("smart_IndentDefs_0_1", new InteropSDefT(smart_$Indent$Defs_0_1.instance, context));
    varScope.addSVar("smart_BlockCommentDef_0_3", new InteropSDefT(smart_$Block$Comment$Def_0_3.instance, context));
    varScope.addSVar("smart_NoContinuation_0_0", new InteropSDefT(smart_$No$Continuation_0_0.instance, context));
    varScope.addSVar("smart_FenceDef_0_2", new InteropSDefT(smart_$Fence$Def_0_2.instance, context));
    varScope.addSVar("smart_IndentDef_0_1", new InteropSDefT(smart_$Indent$Def_0_1.instance, context));
    varScope.addSVar("smart_Sort_0_1", new InteropSDefT(smart_$Sort_0_1.instance, context));
    varScope.addSVar("smart_ListSort_0_1", new InteropSDefT(smart_$List$Sort_0_1.instance, context));
    varScope.addSVar("smart_String_0_1", new InteropSDefT(smart_$String_0_1.instance, context));
    varScope.addSVar("smart_ConstructorOnly_0_1", new InteropSDefT(smart_$Constructor$Only_0_1.instance, context));
    varScope.addSVar("smart_Constructor_0_1", new InteropSDefT(smart_$Constructor_0_1.instance, context));
    varScope.addSVar("smart_SortAndConstructor_0_2", new InteropSDefT(smart_$Sort$And$Constructor_0_2.instance, context));
    varScope.addSVar("smart_Module_0_3", new InteropSDefT(smart_$Module_0_3.instance, context));
    varScope.addSVar("smart_Imports_0_1", new InteropSDefT(smart_$Imports_0_1.instance, context));
    varScope.addSVar("smart_NoImports_0_0", new InteropSDefT(smart_$No$Imports_0_0.instance, context));
    varScope.addSVar("smart_Import_0_1", new InteropSDefT(smart_$Import_0_1.instance, context));
    varScope.addSVar("smart_ImportRenamed_0_2", new InteropSDefT(smart_$Import$Renamed_0_2.instance, context));
    varScope.addSVar("smart_OverlayNoArgs_0_2", new InteropSDefT(smart_$Overlay$No$Args_0_2.instance, context));
    varScope.addSVar("smart_Overlay_0_3", new InteropSDefT(smart_$Overlay_0_3.instance, context));
    varScope.addSVar("smart_DynRuleScope_0_2", new InteropSDefT(smart_$Dyn$Rule$Scope_0_2.instance, context));
    varScope.addSVar("smart_ScopeLabels_0_1", new InteropSDefT(smart_$Scope$Labels_0_1.instance, context));
    varScope.addSVar("smart_GenDynRules_0_1", new InteropSDefT(smart_$Gen$Dyn$Rules_0_1.instance, context));
    varScope.addSVar("smart_AddScopeLabel_0_2", new InteropSDefT(smart_$Add$Scope$Label_0_2.instance, context));
    varScope.addSVar("smart_UndefineDynRule_0_2", new InteropSDefT(smart_$Undefine$Dyn$Rule_0_2.instance, context));
    varScope.addSVar("smart_SetDynRule_0_2", new InteropSDefT(smart_$Set$Dyn$Rule_0_2.instance, context));
    varScope.addSVar("smart_AddDynRule_0_2", new InteropSDefT(smart_$Add$Dyn$Rule_0_2.instance, context));
    varScope.addSVar("smart_SetDynRuleMatch_0_2", new InteropSDefT(smart_$Set$Dyn$Rule$Match_0_2.instance, context));
    varScope.addSVar("smart_DynRuleAssign_0_2", new InteropSDefT(smart_$Dyn$Rule$Assign_0_2.instance, context));
    varScope.addSVar("smart_DynRuleAssignAdd_0_2", new InteropSDefT(smart_$Dyn$Rule$Assign$Add_0_2.instance, context));
    varScope.addSVar("smart_SetDynRuleDepends_0_3", new InteropSDefT(smart_$Set$Dyn$Rule$Depends_0_3.instance, context));
    varScope.addSVar("smart_LabeledDynRuleId_0_2", new InteropSDefT(smart_$Labeled$Dyn$Rule$Id_0_2.instance, context));
    varScope.addSVar("smart_AddLabelDynRuleId_0_2", new InteropSDefT(smart_$Add$Label$Dyn$Rule$Id_0_2.instance, context));
    varScope.addSVar("smart_DynRuleId_0_1", new InteropSDefT(smart_$Dyn$Rule$Id_0_1.instance, context));
    varScope.addSVar("smart_LabeledDynRuleScopeId_0_2", new InteropSDefT(smart_$Labeled$Dyn$Rule$Scope$Id_0_2.instance, context));
    varScope.addSVar("smart_DynRuleScopeId_0_1", new InteropSDefT(smart_$Dyn$Rule$Scope$Id_0_1.instance, context));
    varScope.addSVar("smart_RDecNoArgs_0_1", new InteropSDefT(smart_$R$Dec$No$Args_0_1.instance, context));
    varScope.addSVar("smart_RDec_0_2", new InteropSDefT(smart_$R$Dec_0_2.instance, context));
    varScope.addSVar("smart_RDecT_0_3", new InteropSDefT(smart_$R$Dec$T_0_3.instance, context));
    varScope.addSVar("smart_RuleNames_0_1", new InteropSDefT(smart_$Rule$Names_0_1.instance, context));
    varScope.addSVar("smart_DynRuleIntersectFix_0_2", new InteropSDefT(smart_$Dyn$Rule$Intersect$Fix_0_2.instance, context));
    varScope.addSVar("smart_DynRuleUnionFix_0_2", new InteropSDefT(smart_$Dyn$Rule$Union$Fix_0_2.instance, context));
    varScope.addSVar("smart_DynRuleIntersectUnionFix_0_3", new InteropSDefT(smart_$Dyn$Rule$Intersect$Union$Fix_0_3.instance, context));
    varScope.addSVar("smart_DynRuleIntersect_0_3", new InteropSDefT(smart_$Dyn$Rule$Intersect_0_3.instance, context));
    varScope.addSVar("smart_DynRuleUnion_0_3", new InteropSDefT(smart_$Dyn$Rule$Union_0_3.instance, context));
    varScope.addSVar("smart_DynRuleIntersectUnion_0_4", new InteropSDefT(smart_$Dyn$Rule$Intersect$Union_0_4.instance, context));
    varScope.addSVar("smart_BA_0_2", new InteropSDefT(smart_$B$A_0_2.instance, context));
    varScope.addSVar("smart_AM_0_2", new InteropSDefT(smart_$A$M_0_2.instance, context));
    varScope.addSVar("smart_Seq_0_2", new InteropSDefT(smart_$Seq_0_2.instance, context));
    varScope.addSVar("smart_RDefNoArgs_0_2", new InteropSDefT(smart_$R$Def$No$Args_0_2.instance, context));
    varScope.addSVar("smart_RDef_0_3", new InteropSDefT(smart_$R$Def_0_3.instance, context));
    varScope.addSVar("smart_RDefT_0_4", new InteropSDefT(smart_$R$Def$T_0_4.instance, context));
    varScope.addSVar("smart_RuleNoCond_0_2", new InteropSDefT(smart_$Rule$No$Cond_0_2.instance, context));
    varScope.addSVar("smart_Rule_0_3", new InteropSDefT(smart_$Rule_0_3.instance, context));
    varScope.addSVar("smart_WhereClause_0_1", new InteropSDefT(smart_$Where$Clause_0_1.instance, context));
    varScope.addSVar("smart_WithClause_0_1", new InteropSDefT(smart_$With$Clause_0_1.instance, context));
    varScope.addSVar("smart_SDefNoArgs_0_2", new InteropSDefT(smart_$S$Def$No$Args_0_2.instance, context));
    varScope.addSVar("smart_SDef_0_3", new InteropSDefT(smart_$S$Def_0_3.instance, context));
    varScope.addSVar("smart_DefaultVarDec_0_1", new InteropSDefT(smart_$Default$Var$Dec_0_1.instance, context));
    varScope.addSVar("smart_Call_0_2", new InteropSDefT(smart_$Call_0_2.instance, context));
    varScope.addSVar("smart_ScopeDefault_0_1", new InteropSDefT(smart_$Scope$Default_0_1.instance, context));
    varScope.addSVar("smart_LChoice_0_2", new InteropSDefT(smart_$L$Choice_0_2.instance, context));
    varScope.addSVar("smart_Rec_0_2", new InteropSDefT(smart_$Rec_0_2.instance, context));
    varScope.addSVar("smart_Not_0_1", new InteropSDefT(smart_$Not_0_1.instance, context));
    varScope.addSVar("smart_Where_0_1", new InteropSDefT(smart_$Where_0_1.instance, context));
    varScope.addSVar("smart_With_0_1", new InteropSDefT(smart_$With_0_1.instance, context));
    varScope.addSVar("smart_Test_0_1", new InteropSDefT(smart_$Test_0_1.instance, context));
    varScope.addSVar("smart_PrimNoArgs_0_1", new InteropSDefT(smart_$Prim$No$Args_0_1.instance, context));
    varScope.addSVar("smart_Prim_0_2", new InteropSDefT(smart_$Prim_0_2.instance, context));
    varScope.addSVar("smart_StrCong_0_1", new InteropSDefT(smart_$Str$Cong_0_1.instance, context));
    varScope.addSVar("smart_IntCong_0_1", new InteropSDefT(smart_$Int$Cong_0_1.instance, context));
    varScope.addSVar("smart_RealCong_0_1", new InteropSDefT(smart_$Real$Cong_0_1.instance, context));
    varScope.addSVar("smart_CharCong_0_1", new InteropSDefT(smart_$Char$Cong_0_1.instance, context));
    varScope.addSVar("smart_CongQ_0_2", new InteropSDefT(smart_$Cong$Q_0_2.instance, context));
    varScope.addSVar("smart_AnnoCong_0_2", new InteropSDefT(smart_$Anno$Cong_0_2.instance, context));
    varScope.addSVar("smart_StrategyCurly_0_1", new InteropSDefT(smart_$Strategy$Curly_0_1.instance, context));
    varScope.addSVar("smart_EmptyTupleCong_0_0", new InteropSDefT(smart_$Empty$Tuple$Cong_0_0.instance, context));
    varScope.addSVar("smart_TupleCong_0_2", new InteropSDefT(smart_$Tuple$Cong_0_2.instance, context));
    varScope.addSVar("smart_ListCongNoTail_0_1", new InteropSDefT(smart_$List$Cong$No$Tail_0_1.instance, context));
    varScope.addSVar("smart_ListCong_0_2", new InteropSDefT(smart_$List$Cong_0_2.instance, context));
    varScope.addSVar("smart_ExplodeCong_0_2", new InteropSDefT(smart_$Explode$Cong_0_2.instance, context));
    varScope.addSVar("smart_CallNoArgs_0_1", new InteropSDefT(smart_$Call$No$Args_0_1.instance, context));
    varScope.addSVar("smart_LRule_0_1", new InteropSDefT(smart_$L$Rule_0_1.instance, context));
    varScope.addSVar("smart_SRule_0_1", new InteropSDefT(smart_$S$Rule_0_1.instance, context));
    varScope.addSVar("smart_Choice_0_2", new InteropSDefT(smart_$Choice_0_2.instance, context));
    varScope.addSVar("smart_RChoice_0_2", new InteropSDefT(smart_$R$Choice_0_2.instance, context));
    varScope.addSVar("smart_CondChoice_0_3", new InteropSDefT(smart_$Cond$Choice_0_3.instance, context));
    varScope.addSVar("smart_IfThen_0_2", new InteropSDefT(smart_$If$Then_0_2.instance, context));
    varScope.addSVar("smart_SwitchChoiceNoOtherwise_0_2", new InteropSDefT(smart_$Switch$Choice$No$Otherwise_0_2.instance, context));
    varScope.addSVar("smart_SwitchChoice_0_3", new InteropSDefT(smart_$Switch$Choice_0_3.instance, context));
    varScope.addSVar("smart_SwitchCase_0_2", new InteropSDefT(smart_$Switch$Case_0_2.instance, context));
    varScope.addSVar("smart_Assign_0_2", new InteropSDefT(smart_$Assign_0_2.instance, context));
    varScope.addSVar("smart_ListVar_0_1", new InteropSDefT(smart_$List$Var_0_1.instance, context));
    varScope.addSVar("smart_Var_0_1", new InteropSDefT(smart_$Var_0_1.instance, context));
    varScope.addSVar("smart_BuildDefaultPT_0_1", new InteropSDefT(smart_$Build$Default$P$T_0_1.instance, context));
    varScope.addSVar("smart_BuildDefault_0_1", new InteropSDefT(smart_$Build$Default_0_1.instance, context));
    varScope.addSVar("smart_Char_0_1", new InteropSDefT(smart_$Char_0_1.instance, context));
    varScope.addSVar("smart_AnnoList_0_2", new InteropSDefT(smart_$Anno$List_0_2.instance, context));
    varScope.addSVar("smart_NoAnnoList_0_1", new InteropSDefT(smart_$No$Anno$List_0_1.instance, context));
    varScope.addSVar("smart_App_0_2", new InteropSDefT(smart_$App_0_2.instance, context));
    varScope.addSVar("smart_RootApp_0_1", new InteropSDefT(smart_$Root$App_0_1.instance, context));
    varScope.addSVar("smart_Tuple_0_1", new InteropSDefT(smart_$Tuple_0_1.instance, context));
    varScope.addSVar("smart_List_0_1", new InteropSDefT(smart_$List_0_1.instance, context));
    varScope.addSVar("smart_ListTail_0_2", new InteropSDefT(smart_$List$Tail_0_2.instance, context));
    varScope.addSVar("smart_Explode_0_2", new InteropSDefT(smart_$Explode_0_2.instance, context));
    varScope.addSVar("smart_As_0_2", new InteropSDefT(smart_$As_0_2.instance, context));
    varScope.addSVar("smart_SortList_0_1", new InteropSDefT(smart_$Sort$List_0_1.instance, context));
    varScope.addSVar("smart_SortListTl_0_2", new InteropSDefT(smart_$Sort$List$Tl_0_2.instance, context));
    varScope.addSVar("smart_SortTuple_0_1", new InteropSDefT(smart_$Sort$Tuple_0_1.instance, context));
    varScope.addSVar("smart_Star_0_0", new InteropSDefT(smart_$Star_0_0.instance, context));
    varScope.addSVar("smart_StarStar_0_0", new InteropSDefT(smart_$Star$Star_0_0.instance, context));
    varScope.addSVar("smart_Sorts_0_1", new InteropSDefT(smart_$Sorts_0_1.instance, context));
    varScope.addSVar("smart_Constructors_0_1", new InteropSDefT(smart_$Constructors_0_1.instance, context));
    varScope.addSVar("smart_SortVar_0_1", new InteropSDefT(smart_$Sort$Var_0_1.instance, context));
    varScope.addSVar("smart_SortNoArgs_0_1", new InteropSDefT(smart_$Sort$No$Args_0_1.instance, context));
    varScope.addSVar("smart_Sort_0_2", new InteropSDefT(smart_$Sort_0_2.instance, context));
    varScope.addSVar("smart_OpDecl_0_2", new InteropSDefT(smart_$Op$Decl_0_2.instance, context));
    varScope.addSVar("smart_OpDeclQ_0_2", new InteropSDefT(smart_$Op$Decl$Q_0_2.instance, context));
    varScope.addSVar("smart_OpDeclInj_0_1", new InteropSDefT(smart_$Op$Decl$Inj_0_1.instance, context));
    varScope.addSVar("smart_ExtOpDecl_0_2", new InteropSDefT(smart_$Ext$Op$Decl_0_2.instance, context));
    varScope.addSVar("smart_ExtOpDeclQ_0_2", new InteropSDefT(smart_$Ext$Op$Decl$Q_0_2.instance, context));
    varScope.addSVar("smart_ExtOpDeclInj_0_1", new InteropSDefT(smart_$Ext$Op$Decl$Inj_0_1.instance, context));
    varScope.addSVar("smart_ConstType_0_1", new InteropSDefT(smart_$Const$Type_0_1.instance, context));
    varScope.addSVar("smart_FunType_0_2", new InteropSDefT(smart_$Fun$Type_0_2.instance, context));
    varScope.addSVar("smart_Wld_0_0", new InteropSDefT(smart_$Wld_0_0.instance, context));
    varScope.addSVar("smart_Int_0_1", new InteropSDefT(smart_$Int_0_1.instance, context));
    varScope.addSVar("smart_Real_0_1", new InteropSDefT(smart_$Real_0_1.instance, context));
    varScope.addSVar("smart_Str_0_1", new InteropSDefT(smart_$Str_0_1.instance, context));
    varScope.addSVar("smart_Op_0_2", new InteropSDefT(smart_$Op_0_2.instance, context));
    varScope.addSVar("smart_OpQ_0_2", new InteropSDefT(smart_$Op$Q_0_2.instance, context));
    varScope.addSVar("smart_Anno_0_2", new InteropSDefT(smart_$Anno_0_2.instance, context));
    varScope.addSVar("smart_SVar_0_1", new InteropSDefT(smart_$S$Var_0_1.instance, context));
    varScope.addSVar("smart_Let_0_2", new InteropSDefT(smart_$Let_0_2.instance, context));
    varScope.addSVar("smart_CallT_0_3", new InteropSDefT(smart_$Call$T_0_3.instance, context));
    varScope.addSVar("smart_CallDynamic_0_3", new InteropSDefT(smart_$Call$Dynamic_0_3.instance, context));
    varScope.addSVar("smart_SDefT_0_4", new InteropSDefT(smart_$S$Def$T_0_4.instance, context));
    varScope.addSVar("smart_ExtSDefInl_0_4", new InteropSDefT(smart_$Ext$S$Def$Inl_0_4.instance, context));
    varScope.addSVar("smart_ExtSDef_0_3", new InteropSDefT(smart_$Ext$S$Def_0_3.instance, context));
    varScope.addSVar("smart_VarDec_0_2", new InteropSDefT(smart_$Var$Dec_0_2.instance, context));
    varScope.addSVar("smart_ParenStrat_0_1", new InteropSDefT(smart_$Paren$Strat_0_1.instance, context));
    varScope.addSVar("smart_Fail_0_0", new InteropSDefT(smart_$Fail_0_0.instance, context));
    varScope.addSVar("smart_Id_0_0", new InteropSDefT(smart_$Id_0_0.instance, context));
    varScope.addSVar("smart_Match_0_1", new InteropSDefT(smart_$Match_0_1.instance, context));
    varScope.addSVar("smart_Build_0_1", new InteropSDefT(smart_$Build_0_1.instance, context));
    varScope.addSVar("smart_Scope_0_2", new InteropSDefT(smart_$Scope_0_2.instance, context));
    varScope.addSVar("smart_GuardedLChoice_0_3", new InteropSDefT(smart_$Guarded$L$Choice_0_3.instance, context));
    varScope.addSVar("smart_PrimT_0_3", new InteropSDefT(smart_$Prim$T_0_3.instance, context));
    varScope.addSVar("smart_One_0_1", new InteropSDefT(smart_$One_0_1.instance, context));
    varScope.addSVar("smart_All_0_1", new InteropSDefT(smart_$All_0_1.instance, context));
    varScope.addSVar("smart_ImportTerm_0_1", new InteropSDefT(smart_$Import$Term_0_1.instance, context));
    varScope.addSVar("smart_Module_0_2", new InteropSDefT(smart_$Module_0_2.instance, context));
    varScope.addSVar("smart_Specification_0_1", new InteropSDefT(smart_$Specification_0_1.instance, context));
    varScope.addSVar("smart_ImportWildcard_0_1", new InteropSDefT(smart_$Import$Wildcard_0_1.instance, context));
    varScope.addSVar("smart_alias_0_2", new InteropSDefT(smart_alias_0_2.instance, context));
    varScope.addSVar("smart_char_class_0_1", new InteropSDefT(smart_char_class_0_1.instance, context));
    varScope.addSVar("smart_seq_0_2", new InteropSDefT(smart_seq_0_2.instance, context));
    varScope.addSVar("smart_single_0_1", new InteropSDefT(smart_single_0_1.instance, context));
    varScope.addSVar("smart_alt_0_2", new InteropSDefT(smart_alt_0_2.instance, context));
    varScope.addSVar("smart_list_0_1", new InteropSDefT(smart_list_0_1.instance, context));
    varScope.addSVar("smart_follow_0_2", new InteropSDefT(smart_follow_0_2.instance, context));
    varScope.addSVar("smart_reject_0_0", new InteropSDefT(smart_reject_0_0.instance, context));
    varScope.addSVar("smart_prefer_0_0", new InteropSDefT(smart_prefer_0_0.instance, context));
    varScope.addSVar("smart_avoid_0_0", new InteropSDefT(smart_avoid_0_0.instance, context));
    varScope.addSVar("smart_quoted_0_1", new InteropSDefT(smart_quoted_0_1.instance, context));
    varScope.addSVar("smart_unquoted_0_1", new InteropSDefT(smart_unquoted_0_1.instance, context));
    varScope.addSVar("smart_label_0_2", new InteropSDefT(smart_label_0_2.instance, context));
    varScope.addSVar("smart_unquoted_fun_0_1", new InteropSDefT(smart_unquoted_fun_0_1.instance, context));
    varScope.addSVar("smart_quoted_fun_0_1", new InteropSDefT(smart_quoted_fun_0_1.instance, context));
    varScope.addSVar("smart_lit_0_1", new InteropSDefT(smart_lit_0_1.instance, context));
    varScope.addSVar("smart_ci_lit_0_1", new InteropSDefT(smart_ci_lit_0_1.instance, context));
    varScope.addSVar("smart_prefix_fun_0_4", new InteropSDefT(smart_prefix_fun_0_4.instance, context));
    varScope.addSVar("smart_kernel_start_symbols_0_1", new InteropSDefT(smart_kernel_start_symbols_0_1.instance, context));
    varScope.addSVar("smart_lexical_start_symbols_0_1", new InteropSDefT(smart_lexical_start_symbols_0_1.instance, context));
    varScope.addSVar("smart_context_free_start_symbols_0_1", new InteropSDefT(smart_context_free_start_symbols_0_1.instance, context));
    varScope.addSVar("smart_sort_0_1", new InteropSDefT(smart_sort_0_1.instance, context));
    varScope.addSVar("smart_parameterized_sort_0_2", new InteropSDefT(smart_parameterized_sort_0_2.instance, context));
    varScope.addSVar("smart_numeric_0_1", new InteropSDefT(smart_numeric_0_1.instance, context));
    varScope.addSVar("smart_short_0_1", new InteropSDefT(smart_short_0_1.instance, context));
    varScope.addSVar("smart_top_0_0", new InteropSDefT(smart_top_0_0.instance, context));
    varScope.addSVar("smart_eof_0_0", new InteropSDefT(smart_eof_0_0.instance, context));
    varScope.addSVar("smart_bot_0_0", new InteropSDefT(smart_bot_0_0.instance, context));
    varScope.addSVar("smart_label__start_0_0", new InteropSDefT(smart_label__start_0_0.instance, context));
    varScope.addSVar("smart_range_0_2", new InteropSDefT(smart_range_0_2.instance, context));
    varScope.addSVar("smart_conc_0_2", new InteropSDefT(smart_conc_0_2.instance, context));
    varScope.addSVar("smart_absent_0_0", new InteropSDefT(smart_absent_0_0.instance, context));
    varScope.addSVar("smart_present_0_1", new InteropSDefT(smart_present_0_1.instance, context));
    varScope.addSVar("smart_simple_charclass_0_1", new InteropSDefT(smart_simple_charclass_0_1.instance, context));
    varScope.addSVar("smart_comp_0_1", new InteropSDefT(smart_comp_0_1.instance, context));
    varScope.addSVar("smart_diff_0_2", new InteropSDefT(smart_diff_0_2.instance, context));
    varScope.addSVar("smart_isect_0_2", new InteropSDefT(smart_isect_0_2.instance, context));
    varScope.addSVar("smart_union_0_2", new InteropSDefT(smart_union_0_2.instance, context));
    varScope.addSVar("smart_left_0_0", new InteropSDefT(smart_left_0_0.instance, context));
    varScope.addSVar("smart_right_0_0", new InteropSDefT(smart_right_0_0.instance, context));
    varScope.addSVar("smart_non_assoc_0_0", new InteropSDefT(smart_non_assoc_0_0.instance, context));
    varScope.addSVar("smart_assoc_0_0", new InteropSDefT(smart_assoc_0_0.instance, context));
    varScope.addSVar("smart_bracket_0_0", new InteropSDefT(smart_bracket_0_0.instance, context));
    varScope.addSVar("smart_assoc_0_1", new InteropSDefT(smart_assoc_0_1.instance, context));
    varScope.addSVar("smart_default_0_1", new InteropSDefT(smart_default_0_1.instance, context));
    varScope.addSVar("smart_with_arguments_0_2", new InteropSDefT(smart_with_arguments_0_2.instance, context));
    varScope.addSVar("smart_non_transitive_0_1", new InteropSDefT(smart_non_transitive_0_1.instance, context));
    varScope.addSVar("smart_simple_group_0_1", new InteropSDefT(smart_simple_group_0_1.instance, context));
    varScope.addSVar("smart_prods_group_0_1", new InteropSDefT(smart_prods_group_0_1.instance, context));
    varScope.addSVar("smart_assoc_group_0_2", new InteropSDefT(smart_assoc_group_0_2.instance, context));
    varScope.addSVar("smart_chain_0_1", new InteropSDefT(smart_chain_0_1.instance, context));
    varScope.addSVar("smart_assoc_0_3", new InteropSDefT(smart_assoc_0_3.instance, context));
    varScope.addSVar("smart_lifting_0_1", new InteropSDefT(smart_lifting_0_1.instance, context));
    varScope.addSVar("smart_empty_0_0", new InteropSDefT(smart_empty_0_0.instance, context));
    varScope.addSVar("smart_opt_0_1", new InteropSDefT(smart_opt_0_1.instance, context));
    varScope.addSVar("smart_iter_0_1", new InteropSDefT(smart_iter_0_1.instance, context));
    varScope.addSVar("smart_iter_star_0_1", new InteropSDefT(smart_iter_star_0_1.instance, context));
    varScope.addSVar("smart_iter_sep_0_2", new InteropSDefT(smart_iter_sep_0_2.instance, context));
    varScope.addSVar("smart_iter_star_sep_0_2", new InteropSDefT(smart_iter_star_sep_0_2.instance, context));
    varScope.addSVar("smart_tuple_0_2", new InteropSDefT(smart_tuple_0_2.instance, context));
    varScope.addSVar("smart_func_0_2", new InteropSDefT(smart_func_0_2.instance, context));
    varScope.addSVar("smart_strategy_0_2", new InteropSDefT(smart_strategy_0_2.instance, context));
    varScope.addSVar("smart_renamings_0_1", new InteropSDefT(smart_renamings_0_1.instance, context));
    varScope.addSVar("smart_symbol_0_2", new InteropSDefT(smart_symbol_0_2.instance, context));
    varScope.addSVar("smart_production_0_2", new InteropSDefT(smart_production_0_2.instance, context));
    varScope.addSVar("smart_module_0_3", new InteropSDefT(smart_module_0_3.instance, context));
    varScope.addSVar("smart_exports_0_1", new InteropSDefT(smart_exports_0_1.instance, context));
    varScope.addSVar("smart_hiddens_0_1", new InteropSDefT(smart_hiddens_0_1.instance, context));
    varScope.addSVar("smart_unparameterized_0_1", new InteropSDefT(smart_unparameterized_0_1.instance, context));
    varScope.addSVar("smart_parameterized_0_2", new InteropSDefT(smart_parameterized_0_2.instance, context));
    varScope.addSVar("smart_id_0_1", new InteropSDefT(smart_id_0_1.instance, context));
    varScope.addSVar("smart_imports_0_1", new InteropSDefT(smart_imports_0_1.instance, context));
    varScope.addSVar("smart_imp_section_0_1", new InteropSDefT(smart_imp_section_0_1.instance, context));
    varScope.addSVar("smart_module_0_1", new InteropSDefT(smart_module_0_1.instance, context));
    varScope.addSVar("smart_renamed_module_0_2", new InteropSDefT(smart_renamed_module_0_2.instance, context));
    varScope.addSVar("smart_cf_0_1", new InteropSDefT(smart_cf_0_1.instance, context));
    varScope.addSVar("smart_lex_0_1", new InteropSDefT(smart_lex_0_1.instance, context));
    varScope.addSVar("smart_varsym_0_1", new InteropSDefT(smart_varsym_0_1.instance, context));
    varScope.addSVar("smart_layout_0_0", new InteropSDefT(smart_layout_0_0.instance, context));
    varScope.addSVar("smart_empty_grammar_0_0", new InteropSDefT(smart_empty_grammar_0_0.instance, context));
    varScope.addSVar("smart_conc_grammars_0_2", new InteropSDefT(smart_conc_grammars_0_2.instance, context));
    varScope.addSVar("smart_real_con_0_3", new InteropSDefT(smart_real_con_0_3.instance, context));
    varScope.addSVar("smart_natural_0_1", new InteropSDefT(smart_natural_0_1.instance, context));
    varScope.addSVar("smart_positive_0_1", new InteropSDefT(smart_positive_0_1.instance, context));
    varScope.addSVar("smart_negative_0_1", new InteropSDefT(smart_negative_0_1.instance, context));
    varScope.addSVar("smart_int_0_1", new InteropSDefT(smart_int_0_1.instance, context));
    varScope.addSVar("smart_real_0_1", new InteropSDefT(smart_real_0_1.instance, context));
    varScope.addSVar("smart_fun_0_1", new InteropSDefT(smart_fun_0_1.instance, context));
    varScope.addSVar("smart_appl_0_2", new InteropSDefT(smart_appl_0_2.instance, context));
    varScope.addSVar("smart_placeholder_0_1", new InteropSDefT(smart_placeholder_0_1.instance, context));
    varScope.addSVar("smart_annotated_0_2", new InteropSDefT(smart_annotated_0_2.instance, context));
    varScope.addSVar("smart_term_0_1", new InteropSDefT(smart_term_0_1.instance, context));
    varScope.addSVar("smart_attrs_0_1", new InteropSDefT(smart_attrs_0_1.instance, context));
    varScope.addSVar("smart_no_attrs_0_0", new InteropSDefT(smart_no_attrs_0_0.instance, context));
    varScope.addSVar("smart_prod_0_3", new InteropSDefT(smart_prod_0_3.instance, context));
    varScope.addSVar("smart_start_0_0", new InteropSDefT(smart_start_0_0.instance, context));
    varScope.addSVar("smart_file_start_0_0", new InteropSDefT(smart_file_start_0_0.instance, context));
    varScope.addSVar("smart_definition_0_1", new InteropSDefT(smart_definition_0_1.instance, context));
    varScope.addSVar("smart_PlainDec_0_2", new InteropSDefT(smart_$Plain$Dec_0_2.instance, context));
    varScope.addSVar("smart_PlainDecHead_0_3", new InteropSDefT(smart_$Plain$Dec$Head_0_3.instance, context));
    varScope.addSVar("smart_PlainBody_0_1", new InteropSDefT(smart_$Plain$Body_0_1.instance, context));
    varScope.addSVar("accept_sdf_0_0", new InteropSDefT(accept_sdf_0_0.instance, context));
    varScope.addSVar("accept_str_0_0", new InteropSDefT(accept_str_0_0.instance, context));
    varScope.addSVar("singleton_0_0", new InteropSDefT(singleton_0_0.instance, context));
    varScope.addSVar("children_0_0", new InteropSDefT(children_0_0.instance, context));
    varScope.addSVar("filter_children_1_0", new InteropSDefT(filter_children_1_0.instance, context));
    varScope.addSVar("empty_0_0", new InteropSDefT(empty_0_0.instance, context));
    varScope.addSVar("extract_1_0", new InteropSDefT(extract_1_0.instance, context));
    varScope.addSVar("filter_tree_1_0", new InteropSDefT(filter_tree_1_0.instance, context));
    varScope.addSVar("comp_desugarings_to_sdf_0_0", new InteropSDefT(comp_desugarings_to_sdf_0_0.instance, context));
    varScope.addSVar("comp_desugaring_to_sdf_0_0", new InteropSDefT(comp_desugaring_to_sdf_0_0.instance, context));
    varScope.addSVar("fold_conc_grammars_0_0", new InteropSDefT(fold_conc_grammars_0_0.instance, context));
    varScope.addSVar("main_sdf_0_0", new InteropSDefT(main_sdf_0_0.instance, context));
    varScope.addSVar("extract_sdf_0_0", new InteropSDefT(extract_sdf_0_0.instance, context));
    varScope.addSVar("comp_desugarings_to_str_0_0", new InteropSDefT(comp_desugarings_to_str_0_0.instance, context));
    varScope.addSVar("comp_desugaring_to_str_0_0", new InteropSDefT(comp_desugaring_to_str_0_0.instance, context));
    varScope.addSVar("mainSTR_0_0", new InteropSDefT(main$S$T$R_0_0.instance, context));
    varScope.addSVar("extract_str_0_0", new InteropSDefT(extract_str_0_0.instance, context));
    varScope.addSVar("Locked_1_0", new InteropSDefT($Locked_1_0.instance, context));
    varScope.addSVar("EmptyCollection_0_0", new InteropSDefT($Empty$Collection_0_0.instance, context));
    varScope.addSVar("ToModelTerm_1_0", new InteropSDefT($To$Model$Term_1_0.instance, context));
    varScope.addSVar("TransformationDef_2_0", new InteropSDefT($Transformation$Def_2_0.instance, context));
    varScope.addSVar("Strategies_1_0", new InteropSDefT($Strategies_1_0.instance, context));
    varScope.addSVar("Signature_1_0", new InteropSDefT($Signature_1_0.instance, context));
    varScope.addSVar("Rules_1_0", new InteropSDefT($Rules_1_0.instance, context));
    varScope.addSVar("Overlays_1_0", new InteropSDefT($Overlays_1_0.instance, context));
    varScope.addSVar("TransApp_2_0", new InteropSDefT($Trans$App_2_0.instance, context));
    varScope.addSVar("grammar_elem_1_0", new InteropSDefT(grammar_elem_1_0.instance, context));
    varScope.addSVar("transformation_elem_1_0", new InteropSDefT(transformation_elem_1_0.instance, context));
    varScope.addSVar("sorts_1_0", new InteropSDefT(sorts_1_0.instance, context));
    varScope.addSVar("syntax_1_0", new InteropSDefT(syntax_1_0.instance, context));
    varScope.addSVar("lexical_syntax_1_0", new InteropSDefT(lexical_syntax_1_0.instance, context));
    varScope.addSVar("context_free_syntax_1_0", new InteropSDefT(context_free_syntax_1_0.instance, context));
    varScope.addSVar("variables_1_0", new InteropSDefT(variables_1_0.instance, context));
    varScope.addSVar("lexical_variables_1_0", new InteropSDefT(lexical_variables_1_0.instance, context));
    varScope.addSVar("priorities_1_0", new InteropSDefT(priorities_1_0.instance, context));
    varScope.addSVar("lexical_priorities_1_0", new InteropSDefT(lexical_priorities_1_0.instance, context));
    varScope.addSVar("context_free_priorities_1_0", new InteropSDefT(context_free_priorities_1_0.instance, context));
    varScope.addSVar("restrictions_1_0", new InteropSDefT(restrictions_1_0.instance, context));
    varScope.addSVar("lexical_restrictions_1_0", new InteropSDefT(lexical_restrictions_1_0.instance, context));
    varScope.addSVar("context_free_restrictions_1_0", new InteropSDefT(context_free_restrictions_1_0.instance, context));
    varScope.addSVar("aliases_1_0", new InteropSDefT(aliases_1_0.instance, context));
    varScope.addSVar("Desugarings_1_0", new InteropSDefT($Desugarings_1_0.instance, context));
    varScope.addSVar("Analyses_1_0", new InteropSDefT($Analyses_1_0.instance, context));
    varScope.addSVar("PureDesugaring_1_0", new InteropSDefT($Pure$Desugaring_1_0.instance, context));
    varScope.addSVar("InjectDesugaring_4_0", new InteropSDefT($Inject$Desugaring_4_0.instance, context));
    varScope.addSVar("Refactorings_2_0", new InteropSDefT($Refactorings_2_0.instance, context));
    varScope.addSVar("PPTable_1_0", new InteropSDefT($P$P$Table_1_0.instance, context));
    varScope.addSVar("PrettyPrint_1_0", new InteropSDefT($Pretty$Print_1_0.instance, context));
    varScope.addSVar("Refactoring_4_0", new InteropSDefT($Refactoring_4_0.instance, context));
    varScope.addSVar("Builders_2_0", new InteropSDefT($Builders_2_0.instance, context));
    varScope.addSVar("SemanticObserver_1_0", new InteropSDefT($Semantic$Observer_1_0.instance, context));
    varScope.addSVar("Builder_3_0", new InteropSDefT($Builder_3_0.instance, context));
    varScope.addSVar("BuilderCaption_1_0", new InteropSDefT($Builder$Caption_1_0.instance, context));
    varScope.addSVar("OpenEditor_0_0", new InteropSDefT($Open$Editor_0_0.instance, context));
    varScope.addSVar("RealTime_0_0", new InteropSDefT($Real$Time_0_0.instance, context));
    varScope.addSVar("Persistent_0_0", new InteropSDefT($Persistent_0_0.instance, context));
    varScope.addSVar("Meta_0_0", new InteropSDefT($Meta_0_0.instance, context));
    varScope.addSVar("Cursor_0_0", new InteropSDefT($Cursor_0_0.instance, context));
    varScope.addSVar("Source_0_0", new InteropSDefT($Source_0_0.instance, context));
    varScope.addSVar("Completions_2_0", new InteropSDefT($Completions_2_0.instance, context));
    varScope.addSVar("CompletionProposer_1_0", new InteropSDefT($Completion$Proposer_1_0.instance, context));
    varScope.addSVar("IdentifierLexical_1_0", new InteropSDefT($Identifier$Lexical_1_0.instance, context));
    varScope.addSVar("CompletionKeyword_2_0", new InteropSDefT($Completion$Keyword_2_0.instance, context));
    varScope.addSVar("CompletionTemplate_3_0", new InteropSDefT($Completion$Template_3_0.instance, context));
    varScope.addSVar("CompletionTemplateWithSort_4_0", new InteropSDefT($Completion$Template$With$Sort_4_0.instance, context));
    varScope.addSVar("CompletionTrigger_2_0", new InteropSDefT($Completion$Trigger_2_0.instance, context));
    varScope.addSVar("Placeholder_1_0", new InteropSDefT($Placeholder_1_0.instance, context));
    varScope.addSVar("Disable_0_0", new InteropSDefT($Disable_0_0.instance, context));
    varScope.addSVar("Blank_0_0", new InteropSDefT($Blank_0_0.instance, context));
    varScope.addSVar("References_2_0", new InteropSDefT($References_2_0.instance, context));
    varScope.addSVar("ReferenceHoverRule_3_0", new InteropSDefT($Reference$Hover$Rule_3_0.instance, context));
    varScope.addSVar("ReferenceRule_2_0", new InteropSDefT($Reference$Rule_2_0.instance, context));
    varScope.addSVar("HoverRule_2_0", new InteropSDefT($Hover$Rule_2_0.instance, context));
    varScope.addSVar("OccurrenceRule_2_0", new InteropSDefT($Occurrence$Rule_2_0.instance, context));
    varScope.addSVar("Colorer_2_0", new InteropSDefT($Colorer_2_0.instance, context));
    varScope.addSVar("ColorRuleAll_2_0", new InteropSDefT($Color$Rule$All_2_0.instance, context));
    varScope.addSVar("ColorRule_2_0", new InteropSDefT($Color$Rule_2_0.instance, context));
    varScope.addSVar("ColorRuleAllNamed_3_0", new InteropSDefT($Color$Rule$All$Named_3_0.instance, context));
    varScope.addSVar("ColorRuleNamed_3_0", new InteropSDefT($Color$Rule$Named_3_0.instance, context));
    varScope.addSVar("Attribute_3_0", new InteropSDefT($Attribute_3_0.instance, context));
    varScope.addSVar("AttributeRef_1_0", new InteropSDefT($Attribute$Ref_1_0.instance, context));
    varScope.addSVar("Token_1_0", new InteropSDefT($Token_1_0.instance, context));
    varScope.addSVar("Literal_1_0", new InteropSDefT($Literal_1_0.instance, context));
    varScope.addSVar("TK__IDENTIFIER_0_0", new InteropSDefT($T$K__$I$D$E$N$T$I$F$I$E$R_0_0.instance, context));
    varScope.addSVar("TK__NUMBER_0_0", new InteropSDefT($T$K__$N$U$M$B$E$R_0_0.instance, context));
    varScope.addSVar("TK__LAYOUT_0_0", new InteropSDefT($T$K__$L$A$Y$O$U$T_0_0.instance, context));
    varScope.addSVar("TK__STRING_0_0", new InteropSDefT($T$K__$S$T$R$I$N$G_0_0.instance, context));
    varScope.addSVar("TK__KEYWORD_0_0", new InteropSDefT($T$K__$K$E$Y$W$O$R$D_0_0.instance, context));
    varScope.addSVar("TK__OPERATOR_0_0", new InteropSDefT($T$K__$O$P$E$R$A$T$O$R_0_0.instance, context));
    varScope.addSVar("TK__VAR_0_0", new InteropSDefT($T$K__$V$A$R_0_0.instance, context));
    varScope.addSVar("TK__ERROR_0_0", new InteropSDefT($T$K__$E$R$R$O$R_0_0.instance, context));
    varScope.addSVar("TK__UNKNOWN_0_0", new InteropSDefT($T$K__$U$N$K$N$O$W$N_0_0.instance, context));
    varScope.addSVar("NORMAL_0_0", new InteropSDefT($N$O$R$M$A$L_0_0.instance, context));
    varScope.addSVar("BOLD_0_0", new InteropSDefT($B$O$L$D_0_0.instance, context));
    varScope.addSVar("ITALIC_0_0", new InteropSDefT($I$T$A$L$I$C_0_0.instance, context));
    varScope.addSVar("BOLD__ITALIC_0_0", new InteropSDefT($B$O$L$D__$I$T$A$L$I$C_0_0.instance, context));
    varScope.addSVar("ColorDefault_0_0", new InteropSDefT($Color$Default_0_0.instance, context));
    varScope.addSVar("ColorRGB_3_0", new InteropSDefT($Color$R$G$B_3_0.instance, context));
    varScope.addSVar("NoColor_0_0", new InteropSDefT($No$Color_0_0.instance, context));
    varScope.addSVar("ColorDef_2_0", new InteropSDefT($Color$Def_2_0.instance, context));
    varScope.addSVar("Outliner_2_0", new InteropSDefT($Outliner_2_0.instance, context));
    varScope.addSVar("OutlineRule_1_0", new InteropSDefT($Outline$Rule_1_0.instance, context));
    varScope.addSVar("Folding_2_0", new InteropSDefT($Folding_2_0.instance, context));
    varScope.addSVar("FoldRule_2_0", new InteropSDefT($Fold$Rule_2_0.instance, context));
    varScope.addSVar("FoldRuleAll_2_0", new InteropSDefT($Fold$Rule$All_2_0.instance, context));
    varScope.addSVar("Folded_0_0", new InteropSDefT($Folded_0_0.instance, context));
    varScope.addSVar("SemanticProvider_1_0", new InteropSDefT($Semantic$Provider_1_0.instance, context));
    varScope.addSVar("OnSave_2_0", new InteropSDefT($On$Save_2_0.instance, context));
    varScope.addSVar("Strategy_1_0", new InteropSDefT($Strategy_1_0.instance, context));
    varScope.addSVar("Attribute_1_0", new InteropSDefT($Attribute_1_0.instance, context));
    varScope.addSVar("Language_2_0", new InteropSDefT($Language_2_0.instance, context));
    varScope.addSVar("Values_1_0", new InteropSDefT($Values_1_0.instance, context));
    varScope.addSVar("LanguageName_1_0", new InteropSDefT($Language$Name_1_0.instance, context));
    varScope.addSVar("LanguageId_1_0", new InteropSDefT($Language$Id_1_0.instance, context));
    varScope.addSVar("Extensions_1_0", new InteropSDefT($Extensions_1_0.instance, context));
    varScope.addSVar("Description_1_0", new InteropSDefT($Description_1_0.instance, context));
    varScope.addSVar("Table_1_0", new InteropSDefT($Table_1_0.instance, context));
    varScope.addSVar("TableProvider_1_0", new InteropSDefT($Table$Provider_1_0.instance, context));
    varScope.addSVar("StartSymbols_1_0", new InteropSDefT($Start$Symbols_1_0.instance, context));
    varScope.addSVar("URL_1_0", new InteropSDefT($U$R$L_1_0.instance, context));
    varScope.addSVar("Extends_1_0", new InteropSDefT($Extends_1_0.instance, context));
    varScope.addSVar("Aliases_1_0", new InteropSDefT($Aliases_1_0.instance, context));
    varScope.addSVar("UnmanagedTablePrefix_1_0", new InteropSDefT($Unmanaged$Table$Prefix_1_0.instance, context));
    varScope.addSVar("LineCommentPrefix_1_0", new InteropSDefT($Line$Comment$Prefix_1_0.instance, context));
    varScope.addSVar("BlockCommentDefs_1_0", new InteropSDefT($Block$Comment$Defs_1_0.instance, context));
    varScope.addSVar("FenceDefs_1_0", new InteropSDefT($Fence$Defs_1_0.instance, context));
    varScope.addSVar("IndentDefs_1_0", new InteropSDefT($Indent$Defs_1_0.instance, context));
    varScope.addSVar("BlockCommentDef_3_0", new InteropSDefT($Block$Comment$Def_3_0.instance, context));
    varScope.addSVar("NoContinuation_0_0", new InteropSDefT($No$Continuation_0_0.instance, context));
    varScope.addSVar("FenceDef_2_0", new InteropSDefT($Fence$Def_2_0.instance, context));
    varScope.addSVar("IndentDef_1_0", new InteropSDefT($Indent$Def_1_0.instance, context));
    varScope.addSVar("Sort_1_0", new InteropSDefT($Sort_1_0.instance, context));
    varScope.addSVar("ListSort_1_0", new InteropSDefT($List$Sort_1_0.instance, context));
    varScope.addSVar("String_1_0", new InteropSDefT($String_1_0.instance, context));
    varScope.addSVar("ConstructorOnly_1_0", new InteropSDefT($Constructor$Only_1_0.instance, context));
    varScope.addSVar("Constructor_1_0", new InteropSDefT($Constructor_1_0.instance, context));
    varScope.addSVar("SortAndConstructor_2_0", new InteropSDefT($Sort$And$Constructor_2_0.instance, context));
    varScope.addSVar("Module_3_0", new InteropSDefT($Module_3_0.instance, context));
    varScope.addSVar("Imports_1_0", new InteropSDefT($Imports_1_0.instance, context));
    varScope.addSVar("NoImports_0_0", new InteropSDefT($No$Imports_0_0.instance, context));
    varScope.addSVar("Import_1_0", new InteropSDefT($Import_1_0.instance, context));
    varScope.addSVar("ImportRenamed_2_0", new InteropSDefT($Import$Renamed_2_0.instance, context));
    varScope.addSVar("OverlayNoArgs_2_0", new InteropSDefT($Overlay$No$Args_2_0.instance, context));
    varScope.addSVar("Overlay_3_0", new InteropSDefT($Overlay_3_0.instance, context));
    varScope.addSVar("DynRuleScope_2_0", new InteropSDefT($Dyn$Rule$Scope_2_0.instance, context));
    varScope.addSVar("ScopeLabels_1_0", new InteropSDefT($Scope$Labels_1_0.instance, context));
    varScope.addSVar("GenDynRules_1_0", new InteropSDefT($Gen$Dyn$Rules_1_0.instance, context));
    varScope.addSVar("AddScopeLabel_2_0", new InteropSDefT($Add$Scope$Label_2_0.instance, context));
    varScope.addSVar("UndefineDynRule_2_0", new InteropSDefT($Undefine$Dyn$Rule_2_0.instance, context));
    varScope.addSVar("SetDynRule_2_0", new InteropSDefT($Set$Dyn$Rule_2_0.instance, context));
    varScope.addSVar("AddDynRule_2_0", new InteropSDefT($Add$Dyn$Rule_2_0.instance, context));
    varScope.addSVar("SetDynRuleMatch_2_0", new InteropSDefT($Set$Dyn$Rule$Match_2_0.instance, context));
    varScope.addSVar("DynRuleAssign_2_0", new InteropSDefT($Dyn$Rule$Assign_2_0.instance, context));
    varScope.addSVar("DynRuleAssignAdd_2_0", new InteropSDefT($Dyn$Rule$Assign$Add_2_0.instance, context));
    varScope.addSVar("SetDynRuleDepends_3_0", new InteropSDefT($Set$Dyn$Rule$Depends_3_0.instance, context));
    varScope.addSVar("LabeledDynRuleId_2_0", new InteropSDefT($Labeled$Dyn$Rule$Id_2_0.instance, context));
    varScope.addSVar("AddLabelDynRuleId_2_0", new InteropSDefT($Add$Label$Dyn$Rule$Id_2_0.instance, context));
    varScope.addSVar("DynRuleId_1_0", new InteropSDefT($Dyn$Rule$Id_1_0.instance, context));
    varScope.addSVar("LabeledDynRuleScopeId_2_0", new InteropSDefT($Labeled$Dyn$Rule$Scope$Id_2_0.instance, context));
    varScope.addSVar("DynRuleScopeId_1_0", new InteropSDefT($Dyn$Rule$Scope$Id_1_0.instance, context));
    varScope.addSVar("RDecNoArgs_1_0", new InteropSDefT($R$Dec$No$Args_1_0.instance, context));
    varScope.addSVar("RDec_2_0", new InteropSDefT($R$Dec_2_0.instance, context));
    varScope.addSVar("RDecT_3_0", new InteropSDefT($R$Dec$T_3_0.instance, context));
    varScope.addSVar("RuleNames_1_0", new InteropSDefT($Rule$Names_1_0.instance, context));
    varScope.addSVar("DynRuleIntersectFix_2_0", new InteropSDefT($Dyn$Rule$Intersect$Fix_2_0.instance, context));
    varScope.addSVar("DynRuleUnionFix_2_0", new InteropSDefT($Dyn$Rule$Union$Fix_2_0.instance, context));
    varScope.addSVar("DynRuleIntersectUnionFix_3_0", new InteropSDefT($Dyn$Rule$Intersect$Union$Fix_3_0.instance, context));
    varScope.addSVar("DynRuleIntersect_3_0", new InteropSDefT($Dyn$Rule$Intersect_3_0.instance, context));
    varScope.addSVar("DynRuleUnion_3_0", new InteropSDefT($Dyn$Rule$Union_3_0.instance, context));
    varScope.addSVar("DynRuleIntersectUnion_4_0", new InteropSDefT($Dyn$Rule$Intersect$Union_4_0.instance, context));
    varScope.addSVar("BA_2_0", new InteropSDefT($B$A_2_0.instance, context));
    varScope.addSVar("AM_2_0", new InteropSDefT($A$M_2_0.instance, context));
    varScope.addSVar("Seq_2_0", new InteropSDefT($Seq_2_0.instance, context));
    varScope.addSVar("RDefNoArgs_2_0", new InteropSDefT($R$Def$No$Args_2_0.instance, context));
    varScope.addSVar("RDef_3_0", new InteropSDefT($R$Def_3_0.instance, context));
    varScope.addSVar("RDefT_4_0", new InteropSDefT($R$Def$T_4_0.instance, context));
    varScope.addSVar("RuleNoCond_2_0", new InteropSDefT($Rule$No$Cond_2_0.instance, context));
    varScope.addSVar("Rule_3_0", new InteropSDefT($Rule_3_0.instance, context));
    varScope.addSVar("WhereClause_1_0", new InteropSDefT($Where$Clause_1_0.instance, context));
    varScope.addSVar("WithClause_1_0", new InteropSDefT($With$Clause_1_0.instance, context));
    varScope.addSVar("SDefNoArgs_2_0", new InteropSDefT($S$Def$No$Args_2_0.instance, context));
    varScope.addSVar("SDef_3_0", new InteropSDefT($S$Def_3_0.instance, context));
    varScope.addSVar("DefaultVarDec_1_0", new InteropSDefT($Default$Var$Dec_1_0.instance, context));
    varScope.addSVar("Call_2_0", new InteropSDefT($Call_2_0.instance, context));
    varScope.addSVar("ScopeDefault_1_0", new InteropSDefT($Scope$Default_1_0.instance, context));
  }

  private void registerLazy(org.spoofax.interpreter.core.IContext context, Context compiledContext, ClassLoader classLoader, org.spoofax.interpreter.core.VarScope varScope)
  { 
    registerLazy0(context, compiledContext, classLoader, varScope);
    varScope.addSVar("LChoice_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$L$Choice_2_0", context));
    varScope.addSVar("Rec_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Rec_2_0", context));
    varScope.addSVar("Not_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Not_1_0", context));
    varScope.addSVar("Where_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Where_1_0", context));
    varScope.addSVar("With_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$With_1_0", context));
    varScope.addSVar("Test_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Test_1_0", context));
    varScope.addSVar("PrimNoArgs_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Prim$No$Args_1_0", context));
    varScope.addSVar("Prim_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Prim_2_0", context));
    varScope.addSVar("StrCong_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Str$Cong_1_0", context));
    varScope.addSVar("IntCong_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Int$Cong_1_0", context));
    varScope.addSVar("RealCong_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Real$Cong_1_0", context));
    varScope.addSVar("CharCong_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Char$Cong_1_0", context));
    varScope.addSVar("CongQ_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Cong$Q_2_0", context));
    varScope.addSVar("AnnoCong_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Anno$Cong_2_0", context));
    varScope.addSVar("StrategyCurly_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Strategy$Curly_1_0", context));
    varScope.addSVar("EmptyTupleCong_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Empty$Tuple$Cong_0_0", context));
    varScope.addSVar("TupleCong_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Tuple$Cong_2_0", context));
    varScope.addSVar("ListCongNoTail_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$List$Cong$No$Tail_1_0", context));
    varScope.addSVar("ListCong_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$List$Cong_2_0", context));
    varScope.addSVar("ExplodeCong_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Explode$Cong_2_0", context));
    varScope.addSVar("CallNoArgs_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Call$No$Args_1_0", context));
    varScope.addSVar("LRule_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$L$Rule_1_0", context));
    varScope.addSVar("SRule_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$S$Rule_1_0", context));
    varScope.addSVar("Choice_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Choice_2_0", context));
    varScope.addSVar("RChoice_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$R$Choice_2_0", context));
    varScope.addSVar("CondChoice_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Cond$Choice_3_0", context));
    varScope.addSVar("IfThen_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$If$Then_2_0", context));
    varScope.addSVar("SwitchChoiceNoOtherwise_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Switch$Choice$No$Otherwise_2_0", context));
    varScope.addSVar("SwitchChoice_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Switch$Choice_3_0", context));
    varScope.addSVar("SwitchCase_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Switch$Case_2_0", context));
    varScope.addSVar("Assign_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Assign_2_0", context));
    varScope.addSVar("ListVar_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$List$Var_1_0", context));
    varScope.addSVar("Var_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Var_1_0", context));
    varScope.addSVar("BuildDefaultPT_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Build$Default$P$T_1_0", context));
    varScope.addSVar("BuildDefault_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Build$Default_1_0", context));
    varScope.addSVar("Char_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Char_1_0", context));
    varScope.addSVar("AnnoList_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Anno$List_2_0", context));
    varScope.addSVar("NoAnnoList_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$No$Anno$List_1_0", context));
    varScope.addSVar("App_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$App_2_0", context));
    varScope.addSVar("RootApp_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Root$App_1_0", context));
    varScope.addSVar("Tuple_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Tuple_1_0", context));
    varScope.addSVar("List_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$List_1_0", context));
    varScope.addSVar("ListTail_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$List$Tail_2_0", context));
    varScope.addSVar("Explode_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Explode_2_0", context));
    varScope.addSVar("As_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$As_2_0", context));
    varScope.addSVar("SortList_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Sort$List_1_0", context));
    varScope.addSVar("SortListTl_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Sort$List$Tl_2_0", context));
    varScope.addSVar("SortTuple_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Sort$Tuple_1_0", context));
    varScope.addSVar("Star_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Star_0_0", context));
    varScope.addSVar("StarStar_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Star$Star_0_0", context));
    varScope.addSVar("Sorts_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Sorts_1_0", context));
    varScope.addSVar("Constructors_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Constructors_1_0", context));
    varScope.addSVar("SortVar_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Sort$Var_1_0", context));
    varScope.addSVar("SortNoArgs_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Sort$No$Args_1_0", context));
    varScope.addSVar("Sort_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Sort_2_0", context));
    varScope.addSVar("OpDecl_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Op$Decl_2_0", context));
    varScope.addSVar("OpDeclQ_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Op$Decl$Q_2_0", context));
    varScope.addSVar("OpDeclInj_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Op$Decl$Inj_1_0", context));
    varScope.addSVar("ExtOpDecl_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Ext$Op$Decl_2_0", context));
    varScope.addSVar("ExtOpDeclQ_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Ext$Op$Decl$Q_2_0", context));
    varScope.addSVar("ExtOpDeclInj_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Ext$Op$Decl$Inj_1_0", context));
    varScope.addSVar("ConstType_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Const$Type_1_0", context));
    varScope.addSVar("FunType_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Fun$Type_2_0", context));
    varScope.addSVar("Wld_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Wld_0_0", context));
    varScope.addSVar("Int_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Int_1_0", context));
    varScope.addSVar("Real_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Real_1_0", context));
    varScope.addSVar("Str_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Str_1_0", context));
    varScope.addSVar("Op_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Op_2_0", context));
    varScope.addSVar("OpQ_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Op$Q_2_0", context));
    varScope.addSVar("SVar_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$S$Var_1_0", context));
    varScope.addSVar("Let_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Let_2_0", context));
    varScope.addSVar("CallT_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Call$T_3_0", context));
    varScope.addSVar("CallDynamic_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Call$Dynamic_3_0", context));
    varScope.addSVar("SDefT_4_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$S$Def$T_4_0", context));
    varScope.addSVar("ExtSDefInl_4_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Ext$S$Def$Inl_4_0", context));
    varScope.addSVar("ExtSDef_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Ext$S$Def_3_0", context));
    varScope.addSVar("VarDec_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Var$Dec_2_0", context));
    varScope.addSVar("ParenStrat_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Paren$Strat_1_0", context));
    varScope.addSVar("Fail_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Fail_0_0", context));
    varScope.addSVar("Id_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Id_0_0", context));
    varScope.addSVar("Match_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Match_1_0", context));
    varScope.addSVar("Build_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Build_1_0", context));
    varScope.addSVar("Scope_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Scope_2_0", context));
    varScope.addSVar("GuardedLChoice_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Guarded$L$Choice_3_0", context));
    varScope.addSVar("PrimT_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Prim$T_3_0", context));
    varScope.addSVar("One_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$One_1_0", context));
    varScope.addSVar("All_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$All_1_0", context));
    varScope.addSVar("ImportTerm_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Import$Term_1_0", context));
    varScope.addSVar("Module_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Module_2_0", context));
    varScope.addSVar("Specification_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Specification_1_0", context));
    varScope.addSVar("ImportWildcard_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Import$Wildcard_1_0", context));
    varScope.addSVar("alias_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.alias_2_0", context));
    varScope.addSVar("char_class_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.char_class_1_0", context));
    varScope.addSVar("seq_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.seq_2_0", context));
    varScope.addSVar("single_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.single_1_0", context));
    varScope.addSVar("alt_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.alt_2_0", context));
    varScope.addSVar("follow_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.follow_2_0", context));
    varScope.addSVar("reject_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.reject_0_0", context));
    varScope.addSVar("prefer_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.prefer_0_0", context));
    varScope.addSVar("avoid_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.avoid_0_0", context));
    varScope.addSVar("quoted_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.quoted_1_0", context));
    varScope.addSVar("unquoted_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.unquoted_1_0", context));
    varScope.addSVar("label_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.label_2_0", context));
    varScope.addSVar("unquoted_fun_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.unquoted_fun_1_0", context));
    varScope.addSVar("quoted_fun_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.quoted_fun_1_0", context));
    varScope.addSVar("lit_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.lit_1_0", context));
    varScope.addSVar("ci_lit_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.ci_lit_1_0", context));
    varScope.addSVar("prefix_fun_4_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.prefix_fun_4_0", context));
    varScope.addSVar("kernel_start_symbols_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.kernel_start_symbols_1_0", context));
    varScope.addSVar("lexical_start_symbols_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.lexical_start_symbols_1_0", context));
    varScope.addSVar("context_free_start_symbols_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.context_free_start_symbols_1_0", context));
    varScope.addSVar("sort_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.sort_1_0", context));
    varScope.addSVar("parameterized_sort_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.parameterized_sort_2_0", context));
    varScope.addSVar("numeric_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.numeric_1_0", context));
    varScope.addSVar("short_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.short_1_0", context));
    varScope.addSVar("top_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.top_0_0", context));
    varScope.addSVar("eof_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.eof_0_0", context));
    varScope.addSVar("bot_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.bot_0_0", context));
    varScope.addSVar("label__start_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.label__start_0_0", context));
    varScope.addSVar("range_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.range_2_0", context));
    varScope.addSVar("conc_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.conc_2_0", context));
    varScope.addSVar("absent_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.absent_0_0", context));
    varScope.addSVar("present_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.present_1_0", context));
    varScope.addSVar("simple_charclass_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.simple_charclass_1_0", context));
    varScope.addSVar("comp_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.comp_1_0", context));
    varScope.addSVar("diff_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.diff_2_0", context));
    varScope.addSVar("isect_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.isect_2_0", context));
    varScope.addSVar("union_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.union_2_0", context));
    varScope.addSVar("left_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.left_0_0", context));
    varScope.addSVar("right_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.right_0_0", context));
    varScope.addSVar("non_assoc_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.non_assoc_0_0", context));
    varScope.addSVar("assoc_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.assoc_0_0", context));
    varScope.addSVar("bracket_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.bracket_0_0", context));
    varScope.addSVar("assoc_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.assoc_1_0", context));
    varScope.addSVar("default_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.default_1_0", context));
    varScope.addSVar("with_arguments_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.with_arguments_2_0", context));
    varScope.addSVar("non_transitive_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.non_transitive_1_0", context));
    varScope.addSVar("simple_group_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.simple_group_1_0", context));
    varScope.addSVar("prods_group_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.prods_group_1_0", context));
    varScope.addSVar("assoc_group_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.assoc_group_2_0", context));
    varScope.addSVar("chain_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.chain_1_0", context));
    varScope.addSVar("assoc_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.assoc_3_0", context));
    varScope.addSVar("lifting_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.lifting_1_0", context));
    varScope.addSVar("opt_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.opt_1_0", context));
    varScope.addSVar("iter_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.iter_1_0", context));
    varScope.addSVar("iter_star_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.iter_star_1_0", context));
    varScope.addSVar("iter_sep_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.iter_sep_2_0", context));
    varScope.addSVar("iter_star_sep_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.iter_star_sep_2_0", context));
    varScope.addSVar("tuple_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.tuple_2_0", context));
    varScope.addSVar("func_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.func_2_0", context));
    varScope.addSVar("strategy_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.strategy_2_0", context));
    varScope.addSVar("renamings_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.renamings_1_0", context));
    varScope.addSVar("symbol_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.symbol_2_0", context));
    varScope.addSVar("production_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.production_2_0", context));
    varScope.addSVar("module_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.module_3_0", context));
    varScope.addSVar("exports_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.exports_1_0", context));
    varScope.addSVar("hiddens_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.hiddens_1_0", context));
    varScope.addSVar("unparameterized_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.unparameterized_1_0", context));
    varScope.addSVar("parameterized_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.parameterized_2_0", context));
    varScope.addSVar("id_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.id_1_0", context));
    varScope.addSVar("imports_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.imports_1_0", context));
    varScope.addSVar("imp_section_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.imp_section_1_0", context));
    varScope.addSVar("module_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.module_1_0", context));
    varScope.addSVar("renamed_module_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.renamed_module_2_0", context));
    varScope.addSVar("cf_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.cf_1_0", context));
    varScope.addSVar("lex_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.lex_1_0", context));
    varScope.addSVar("varsym_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.varsym_1_0", context));
    varScope.addSVar("layout_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.layout_0_0", context));
    varScope.addSVar("empty_grammar_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.empty_grammar_0_0", context));
    varScope.addSVar("conc_grammars_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.conc_grammars_2_0", context));
    varScope.addSVar("real_con_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.real_con_3_0", context));
    varScope.addSVar("natural_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.natural_1_0", context));
    varScope.addSVar("positive_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.positive_1_0", context));
    varScope.addSVar("negative_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.negative_1_0", context));
    varScope.addSVar("int_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.int_1_0", context));
    varScope.addSVar("real_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.real_1_0", context));
    varScope.addSVar("fun_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.fun_1_0", context));
    varScope.addSVar("appl_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.appl_2_0", context));
    varScope.addSVar("placeholder_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.placeholder_1_0", context));
    varScope.addSVar("annotated_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.annotated_2_0", context));
    varScope.addSVar("term_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.term_1_0", context));
    varScope.addSVar("attrs_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.attrs_1_0", context));
    varScope.addSVar("no_attrs_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.no_attrs_0_0", context));
    varScope.addSVar("prod_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.prod_3_0", context));
    varScope.addSVar("start_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.start_0_0", context));
    varScope.addSVar("file_start_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.file_start_0_0", context));
    varScope.addSVar("definition_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.definition_1_0", context));
    varScope.addSVar("PlainDec_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Plain$Dec_2_0", context));
    varScope.addSVar("PlainDecHead_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Plain$Dec$Head_3_0", context));
    varScope.addSVar("PlainBody_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Plain$Body_1_0", context));
    varScope.addSVar("innermost_scope_Subsort_Stack_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.innermost_scope_$Subsort_$Stack_1_0", context));
    varScope.addSVar("DYNAMIC__CALLS_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$D$Y$N$A$M$I$C__$C$A$L$L$S_0_0", context));
    varScope.addSVar("undefine_Subsort_Stack_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.undefine_$Subsort_$Stack_0_1", context));
    varScope.addSVar("throw_Subsort_Stack_1_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.throw_$Subsort_$Stack_1_1", context));
    varScope.addSVar("continue_to_label_Subsort_Stack_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.continue_to_label_$Subsort_$Stack_0_1", context));
    varScope.addSVar("continue_Subsort_Stack_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.continue_$Subsort_$Stack_0_0", context));
    varScope.addSVar("break_bp_Subsort_Stack_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.break_bp_$Subsort_$Stack_0_0", context));
    varScope.addSVar("break_to_label_Subsort_Stack_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.break_to_label_$Subsort_$Stack_0_1", context));
    varScope.addSVar("break_Subsort_Stack_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.break_$Subsort_$Stack_0_0", context));
    varScope.addSVar("all_keys_Subsort_Stack_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.all_keys_$Subsort_$Stack_0_0", context));
    varScope.addSVar("bigfold_Subsort_Stack_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.bigfold_$Subsort_$Stack_1_0", context));
    varScope.addSVar("fold_Subsort_Stack_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.fold_$Subsort_$Stack_1_0", context));
    varScope.addSVar("bigchain_Subsort_Stack_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.bigchain_$Subsort_$Stack_0_0", context));
    varScope.addSVar("chain_Subsort_Stack_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.chain_$Subsort_$Stack_0_0", context));
    varScope.addSVar("bigbagof_Subsort_Stack_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.bigbagof_$Subsort_$Stack_0_0", context));
    varScope.addSVar("once_Subsort_Stack_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.once_$Subsort_$Stack_0_0", context));
    varScope.addSVar("reverse_bagof_Subsort_Stack_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.reverse_bagof_$Subsort_$Stack_1_0", context));
    varScope.addSVar("bagof_Subsort_Stack_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.bagof_$Subsort_$Stack_0_0", context));
    varScope.addSVar("Subsort_Stack_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Subsort_$Stack_0_0", context));
    varScope.addSVar("aux_Subsort_Stack_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.aux_$Subsort_$Stack_0_1", context));
  }

  private void registerLazy0(org.spoofax.interpreter.core.IContext context, Context compiledContext, ClassLoader classLoader, org.spoofax.interpreter.core.VarScope varScope)
  { 
    compiledContext.registerComponent("extraction");
    extraction.init(compiledContext);
    varScope.addSVar("changed_tree_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.changed_tree_1_0", context));
    varScope.addSVar("intersect_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.intersect_0_0", context));
    varScope.addSVar("contains_all_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.contains_all_0_0", context));
    varScope.addSVar("foldl1_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.foldl1_1_0", context));
    varScope.addSVar("myfoldr1_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.myfoldr1_2_0", context));
    varScope.addSVar("myfoldr1_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.myfoldr1_3_0", context));
    varScope.addSVar("desugar_analyze_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.desugar_analyze_0_0", context));
    varScope.addSVar("strat_to_analysis_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.strat_to_analysis_0_0", context));
    varScope.addSVar("analyze_main_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.analyze_main_0_0", context));
    varScope.addSVar("analyze_debug_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.analyze_debug_0_0", context));
    varScope.addSVar("start_analysis_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.start_analysis_0_0", context));
    varScope.addSVar("init_for_analysis_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.init_for_analysis_0_0", context));
    varScope.addSVar("get_analysis_data_annotation_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.get_analysis_data_annotation_0_0", context));
    varScope.addSVar("init_analysis_data_annotation_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.init_analysis_data_annotation_0_0", context));
    varScope.addSVar("put_analysis_data_annotation_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.put_analysis_data_annotation_0_1", context));
    varScope.addSVar("rm_analysis_data_annotation_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.rm_analysis_data_annotation_0_0", context));
    varScope.addSVar("rm_empty_analysis_data_annotations_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.rm_empty_analysis_data_annotations_0_0", context));
    varScope.addSVar("get_anno_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.get_anno_0_1", context));
    varScope.addSVar("put_anno_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.put_anno_0_2", context));
    varScope.addSVar("rm_anno_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.rm_anno_0_1", context));
    varScope.addSVar("sugarj_analyze_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.sugarj_analyze_0_0", context));
    varScope.addSVar("editor_init_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.editor_init_0_0", context));
    varScope.addSVar("constraint_error_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.constraint_error_0_0", context));
    varScope.addSVar("constraint_warning_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.constraint_warning_0_0", context));
    varScope.addSVar("constraint_note_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.constraint_note_0_0", context));
    varScope.addSVar("change_annotations_only_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.change_annotations_only_1_0", context));
    varScope.addSVar("analysis_data_as_list_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.analysis_data_as_list_0_0", context));
    varScope.addSVar("restore_analysis_data_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.restore_analysis_data_0_0", context));
    varScope.addSVar("structurally_equal_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.structurally_equal_0_0", context));
    varScope.addSVar("nice_analysis_data_term_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.nice_analysis_data_term_0_0", context));
    varScope.addSVar("debug_analysis_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.debug_analysis_0_0", context));
    varScope.addSVar("debug_analysis_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.debug_analysis_1_0", context));
    varScope.addSVar("smart_Some_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Some_0_1", context));
    varScope.addSVar("put_syntax_sort_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.put_syntax_sort_0_1", context));
    varScope.addSVar("get_syntax_sort_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.get_syntax_sort_0_0", context));
    varScope.addSVar("has_sort_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.has_sort_0_0", context));
    varScope.addSVar("is_lexical_sort_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.is_lexical_sort_0_0", context));
    varScope.addSVar("has_subsort_of_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.has_subsort_of_0_0", context));
    varScope.addSVar("try_init_subsort_stack_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.try_init_subsort_stack_0_0", context));
    varScope.addSVar("push_subsort_stack_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.push_subsort_stack_0_0", context));
    varScope.addSVar("pop_subsort_stack_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.pop_subsort_stack_0_0", context));
    varScope.addSVar("has_subsort_of_refl_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.has_subsort_of_refl_0_0", context));
    varScope.addSVar("has_subsort_unrename_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.has_subsort_unrename_0_0", context));
    varScope.addSVar("has_subsort_of_trans_0_0_fragment_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.has_subsort_of_trans_0_0_fragment_0", context));
    varScope.addSVar("has_subsort_of_trans_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.has_subsort_of_trans_0_0", context));
    varScope.addSVar("unrename_sort_0_0_fragment_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.unrename_sort_0_0_fragment_2", context));
    varScope.addSVar("unrename_sort_0_0_fragment_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.unrename_sort_0_0_fragment_1", context));
    varScope.addSVar("unrename_sort_0_0_fragment_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.unrename_sort_0_0_fragment_0", context));
    varScope.addSVar("unrename_sort_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.unrename_sort_0_0", context));
    varScope.addSVar("has_subsort_of_inject_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.has_subsort_of_inject_0_2", context));
    varScope.addSVar("sort_match_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.sort_match_0_0", context));
    varScope.addSVar("build_alt_sort_or_fail_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.build_alt_sort_or_fail_0_0", context));
    varScope.addSVar("log_mismatching_sort_error_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.log_mismatching_sort_error_0_1", context));
    varScope.addSVar("smart_ToModelTerm_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$To$Model$Term_0_1", context));
    varScope.addSVar("smart_TransformationDef_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Transformation$Def_0_2", context));
    varScope.addSVar("smart_Strategies_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Strategies_0_1", context));
    varScope.addSVar("smart_Signature_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Signature_0_1", context));
    varScope.addSVar("smart_Rules_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Rules_0_1", context));
    varScope.addSVar("smart_Overlays_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Overlays_0_1", context));
    varScope.addSVar("smart_TransApp_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Trans$App_0_2", context));
    varScope.addSVar("smart_grammar_elem_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_grammar_elem_0_1", context));
    varScope.addSVar("smart_transformation_elem_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_transformation_elem_0_1", context));
    varScope.addSVar("smart_sorts_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_sorts_0_1", context));
    varScope.addSVar("smart_syntax_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_syntax_0_1", context));
    varScope.addSVar("smart_lexical_syntax_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_lexical_syntax_0_1", context));
    varScope.addSVar("smart_context_free_syntax_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_context_free_syntax_0_1", context));
    varScope.addSVar("smart_variables_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_variables_0_1", context));
    varScope.addSVar("smart_lexical_variables_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_lexical_variables_0_1", context));
    varScope.addSVar("smart_priorities_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_priorities_0_1", context));
    varScope.addSVar("smart_lexical_priorities_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_lexical_priorities_0_1", context));
    varScope.addSVar("smart_context_free_priorities_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_context_free_priorities_0_1", context));
    varScope.addSVar("smart_restrictions_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_restrictions_0_1", context));
    varScope.addSVar("smart_lexical_restrictions_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_lexical_restrictions_0_1", context));
    varScope.addSVar("smart_context_free_restrictions_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_context_free_restrictions_0_1", context));
    varScope.addSVar("smart_aliases_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_aliases_0_1", context));
    varScope.addSVar("smart_Desugarings_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Desugarings_0_1", context));
    varScope.addSVar("smart_Analyses_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Analyses_0_1", context));
    varScope.addSVar("smart_PureDesugaring_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Pure$Desugaring_0_1", context));
    varScope.addSVar("smart_InjectDesugaring_0_4", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Inject$Desugaring_0_4", context));
    varScope.addSVar("smart_Refactorings_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Refactorings_0_2", context));
    varScope.addSVar("smart_PPTable_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$P$P$Table_0_1", context));
    varScope.addSVar("smart_PrettyPrint_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Pretty$Print_0_1", context));
    varScope.addSVar("smart_Refactoring_0_4", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Refactoring_0_4", context));
    varScope.addSVar("smart_Builders_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Builders_0_2", context));
    varScope.addSVar("smart_SemanticObserver_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Semantic$Observer_0_1", context));
    varScope.addSVar("smart_Builder_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Builder_0_3", context));
    varScope.addSVar("smart_BuilderCaption_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Builder$Caption_0_1", context));
    varScope.addSVar("smart_OpenEditor_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Open$Editor_0_0", context));
    varScope.addSVar("smart_RealTime_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Real$Time_0_0", context));
    varScope.addSVar("smart_Persistent_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Persistent_0_0", context));
    varScope.addSVar("smart_Meta_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Meta_0_0", context));
    varScope.addSVar("smart_Cursor_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Cursor_0_0", context));
    varScope.addSVar("smart_Source_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Source_0_0", context));
    varScope.addSVar("smart_Completions_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Completions_0_2", context));
    varScope.addSVar("smart_CompletionProposer_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Completion$Proposer_0_1", context));
    varScope.addSVar("smart_IdentifierLexical_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Identifier$Lexical_0_1", context));
    varScope.addSVar("smart_CompletionKeyword_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Completion$Keyword_0_2", context));
    varScope.addSVar("smart_CompletionTemplate_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Completion$Template_0_3", context));
    varScope.addSVar("smart_CompletionTemplateWithSort_0_4", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Completion$Template$With$Sort_0_4", context));
    varScope.addSVar("smart_CompletionTrigger_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Completion$Trigger_0_2", context));
    varScope.addSVar("smart_Placeholder_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Placeholder_0_1", context));
    varScope.addSVar("smart_None_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$None_0_0", context));
    varScope.addSVar("smart_Disable_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Disable_0_0", context));
    varScope.addSVar("smart_Blank_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Blank_0_0", context));
    varScope.addSVar("smart_References_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$References_0_2", context));
    varScope.addSVar("smart_ReferenceHoverRule_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Reference$Hover$Rule_0_3", context));
    varScope.addSVar("smart_ReferenceRule_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Reference$Rule_0_2", context));
    varScope.addSVar("smart_HoverRule_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Hover$Rule_0_2", context));
    varScope.addSVar("smart_OccurrenceRule_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Occurrence$Rule_0_2", context));
    varScope.addSVar("smart_Colorer_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Colorer_0_2", context));
    varScope.addSVar("smart_ColorRuleAll_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Color$Rule$All_0_2", context));
    varScope.addSVar("smart_ColorRule_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Color$Rule_0_2", context));
    varScope.addSVar("smart_ColorRuleAllNamed_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Color$Rule$All$Named_0_3", context));
    varScope.addSVar("smart_ColorRuleNamed_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Color$Rule$Named_0_3", context));
    varScope.addSVar("smart_Attribute_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Attribute_0_3", context));
    varScope.addSVar("smart_AttributeRef_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Attribute$Ref_0_1", context));
    varScope.addSVar("smart_Token_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Token_0_1", context));
    varScope.addSVar("smart_Literal_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Literal_0_1", context));
    varScope.addSVar("smart_TK__IDENTIFIER_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$T$K__$I$D$E$N$T$I$F$I$E$R_0_0", context));
    varScope.addSVar("smart_TK__NUMBER_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$T$K__$N$U$M$B$E$R_0_0", context));
    varScope.addSVar("smart_TK__LAYOUT_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$T$K__$L$A$Y$O$U$T_0_0", context));
    varScope.addSVar("smart_TK__STRING_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$T$K__$S$T$R$I$N$G_0_0", context));
    varScope.addSVar("smart_TK__KEYWORD_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$T$K__$K$E$Y$W$O$R$D_0_0", context));
    varScope.addSVar("smart_TK__OPERATOR_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$T$K__$O$P$E$R$A$T$O$R_0_0", context));
    varScope.addSVar("smart_TK__VAR_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$T$K__$V$A$R_0_0", context));
    varScope.addSVar("smart_TK__ERROR_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$T$K__$E$R$R$O$R_0_0", context));
    varScope.addSVar("smart_TK__UNKNOWN_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$T$K__$U$N$K$N$O$W$N_0_0", context));
    varScope.addSVar("smart_NORMAL_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$N$O$R$M$A$L_0_0", context));
    varScope.addSVar("smart_BOLD_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$B$O$L$D_0_0", context));
    varScope.addSVar("smart_ITALIC_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$I$T$A$L$I$C_0_0", context));
    varScope.addSVar("smart_BOLD__ITALIC_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$B$O$L$D__$I$T$A$L$I$C_0_0", context));
    varScope.addSVar("smart_ColorDefault_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Color$Default_0_0", context));
    varScope.addSVar("smart_ColorRGB_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Color$R$G$B_0_3", context));
    varScope.addSVar("smart_NoColor_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$No$Color_0_0", context));
    varScope.addSVar("smart_ColorDef_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Color$Def_0_2", context));
    varScope.addSVar("smart_Outliner_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Outliner_0_2", context));
    varScope.addSVar("smart_OutlineRule_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Outline$Rule_0_1", context));
    varScope.addSVar("smart_Folding_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Folding_0_2", context));
    varScope.addSVar("smart_FoldRule_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Fold$Rule_0_2", context));
    varScope.addSVar("smart_FoldRuleAll_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Fold$Rule$All_0_2", context));
    varScope.addSVar("smart_Folded_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Folded_0_0", context));
    varScope.addSVar("smart_SemanticProvider_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Semantic$Provider_0_1", context));
    varScope.addSVar("smart_OnSave_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$On$Save_0_2", context));
    varScope.addSVar("smart_Strategy_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Strategy_0_1", context));
    varScope.addSVar("smart_Attribute_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Attribute_0_1", context));
    varScope.addSVar("smart_Language_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Language_0_2", context));
    varScope.addSVar("smart_Values_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Values_0_1", context));
    varScope.addSVar("smart_LanguageName_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Language$Name_0_1", context));
    varScope.addSVar("smart_LanguageId_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Language$Id_0_1", context));
    varScope.addSVar("smart_Extensions_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Extensions_0_1", context));
    varScope.addSVar("smart_Description_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Description_0_1", context));
    varScope.addSVar("smart_Table_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Table_0_1", context));
    varScope.addSVar("smart_TableProvider_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Table$Provider_0_1", context));
    varScope.addSVar("smart_StartSymbols_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Start$Symbols_0_1", context));
    varScope.addSVar("smart_URL_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$U$R$L_0_1", context));
    varScope.addSVar("smart_Extends_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Extends_0_1", context));
    varScope.addSVar("smart_Aliases_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Aliases_0_1", context));
    varScope.addSVar("smart_UnmanagedTablePrefix_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Unmanaged$Table$Prefix_0_1", context));
    varScope.addSVar("smart_LineCommentPrefix_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Line$Comment$Prefix_0_1", context));
    varScope.addSVar("smart_BlockCommentDefs_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Block$Comment$Defs_0_1", context));
    varScope.addSVar("smart_FenceDefs_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Fence$Defs_0_1", context));
    varScope.addSVar("smart_IndentDefs_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Indent$Defs_0_1", context));
    varScope.addSVar("smart_BlockCommentDef_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Block$Comment$Def_0_3", context));
    varScope.addSVar("smart_NoContinuation_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$No$Continuation_0_0", context));
    varScope.addSVar("smart_FenceDef_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Fence$Def_0_2", context));
    varScope.addSVar("smart_IndentDef_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Indent$Def_0_1", context));
    varScope.addSVar("smart_Sort_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Sort_0_1", context));
    varScope.addSVar("smart_ListSort_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$List$Sort_0_1", context));
    varScope.addSVar("smart_String_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$String_0_1", context));
    varScope.addSVar("smart_ConstructorOnly_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Constructor$Only_0_1", context));
    varScope.addSVar("smart_Constructor_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Constructor_0_1", context));
    varScope.addSVar("smart_SortAndConstructor_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Sort$And$Constructor_0_2", context));
    varScope.addSVar("smart_Module_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Module_0_3", context));
    varScope.addSVar("smart_Imports_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Imports_0_1", context));
    varScope.addSVar("smart_NoImports_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$No$Imports_0_0", context));
    varScope.addSVar("smart_Import_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Import_0_1", context));
    varScope.addSVar("smart_ImportRenamed_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Import$Renamed_0_2", context));
    varScope.addSVar("smart_OverlayNoArgs_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Overlay$No$Args_0_2", context));
    varScope.addSVar("smart_Overlay_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Overlay_0_3", context));
    varScope.addSVar("smart_DynRuleScope_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Dyn$Rule$Scope_0_2", context));
    varScope.addSVar("smart_ScopeLabels_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Scope$Labels_0_1", context));
    varScope.addSVar("smart_GenDynRules_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Gen$Dyn$Rules_0_1", context));
    varScope.addSVar("smart_AddScopeLabel_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Add$Scope$Label_0_2", context));
    varScope.addSVar("smart_UndefineDynRule_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Undefine$Dyn$Rule_0_2", context));
    varScope.addSVar("smart_SetDynRule_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Set$Dyn$Rule_0_2", context));
    varScope.addSVar("smart_AddDynRule_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Add$Dyn$Rule_0_2", context));
    varScope.addSVar("smart_SetDynRuleMatch_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Set$Dyn$Rule$Match_0_2", context));
    varScope.addSVar("smart_DynRuleAssign_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Dyn$Rule$Assign_0_2", context));
    varScope.addSVar("smart_DynRuleAssignAdd_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Dyn$Rule$Assign$Add_0_2", context));
    varScope.addSVar("smart_SetDynRuleDepends_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Set$Dyn$Rule$Depends_0_3", context));
    varScope.addSVar("smart_LabeledDynRuleId_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Labeled$Dyn$Rule$Id_0_2", context));
    varScope.addSVar("smart_AddLabelDynRuleId_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Add$Label$Dyn$Rule$Id_0_2", context));
    varScope.addSVar("smart_DynRuleId_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Dyn$Rule$Id_0_1", context));
    varScope.addSVar("smart_LabeledDynRuleScopeId_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Labeled$Dyn$Rule$Scope$Id_0_2", context));
    varScope.addSVar("smart_DynRuleScopeId_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Dyn$Rule$Scope$Id_0_1", context));
    varScope.addSVar("smart_RDecNoArgs_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$R$Dec$No$Args_0_1", context));
    varScope.addSVar("smart_RDec_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$R$Dec_0_2", context));
    varScope.addSVar("smart_RDecT_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$R$Dec$T_0_3", context));
    varScope.addSVar("smart_RuleNames_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Rule$Names_0_1", context));
    varScope.addSVar("smart_DynRuleIntersectFix_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Dyn$Rule$Intersect$Fix_0_2", context));
    varScope.addSVar("smart_DynRuleUnionFix_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Dyn$Rule$Union$Fix_0_2", context));
    varScope.addSVar("smart_DynRuleIntersectUnionFix_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Dyn$Rule$Intersect$Union$Fix_0_3", context));
    varScope.addSVar("smart_DynRuleIntersect_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Dyn$Rule$Intersect_0_3", context));
    varScope.addSVar("smart_DynRuleUnion_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Dyn$Rule$Union_0_3", context));
    varScope.addSVar("smart_DynRuleIntersectUnion_0_4", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Dyn$Rule$Intersect$Union_0_4", context));
    varScope.addSVar("smart_BA_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$B$A_0_2", context));
    varScope.addSVar("smart_AM_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$A$M_0_2", context));
    varScope.addSVar("smart_Seq_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Seq_0_2", context));
    varScope.addSVar("smart_RDefNoArgs_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$R$Def$No$Args_0_2", context));
    varScope.addSVar("smart_RDef_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$R$Def_0_3", context));
    varScope.addSVar("smart_RDefT_0_4", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$R$Def$T_0_4", context));
    varScope.addSVar("smart_RuleNoCond_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Rule$No$Cond_0_2", context));
    varScope.addSVar("smart_Rule_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Rule_0_3", context));
    varScope.addSVar("smart_WhereClause_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Where$Clause_0_1", context));
    varScope.addSVar("smart_WithClause_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$With$Clause_0_1", context));
    varScope.addSVar("smart_SDefNoArgs_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$S$Def$No$Args_0_2", context));
    varScope.addSVar("smart_SDef_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$S$Def_0_3", context));
    varScope.addSVar("smart_DefaultVarDec_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Default$Var$Dec_0_1", context));
    varScope.addSVar("smart_Call_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Call_0_2", context));
    varScope.addSVar("smart_ScopeDefault_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Scope$Default_0_1", context));
    varScope.addSVar("smart_LChoice_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$L$Choice_0_2", context));
    varScope.addSVar("smart_Rec_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Rec_0_2", context));
    varScope.addSVar("smart_Not_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Not_0_1", context));
    varScope.addSVar("smart_Where_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Where_0_1", context));
    varScope.addSVar("smart_With_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$With_0_1", context));
    varScope.addSVar("smart_Test_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Test_0_1", context));
    varScope.addSVar("smart_PrimNoArgs_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Prim$No$Args_0_1", context));
    varScope.addSVar("smart_Prim_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Prim_0_2", context));
    varScope.addSVar("smart_StrCong_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Str$Cong_0_1", context));
    varScope.addSVar("smart_IntCong_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Int$Cong_0_1", context));
    varScope.addSVar("smart_RealCong_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Real$Cong_0_1", context));
    varScope.addSVar("smart_CharCong_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Char$Cong_0_1", context));
    varScope.addSVar("smart_CongQ_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Cong$Q_0_2", context));
    varScope.addSVar("smart_AnnoCong_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Anno$Cong_0_2", context));
    varScope.addSVar("smart_StrategyCurly_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Strategy$Curly_0_1", context));
    varScope.addSVar("smart_EmptyTupleCong_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Empty$Tuple$Cong_0_0", context));
    varScope.addSVar("smart_TupleCong_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Tuple$Cong_0_2", context));
    varScope.addSVar("smart_ListCongNoTail_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$List$Cong$No$Tail_0_1", context));
    varScope.addSVar("smart_ListCong_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$List$Cong_0_2", context));
    varScope.addSVar("smart_ExplodeCong_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Explode$Cong_0_2", context));
    varScope.addSVar("smart_CallNoArgs_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Call$No$Args_0_1", context));
    varScope.addSVar("smart_LRule_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$L$Rule_0_1", context));
    varScope.addSVar("smart_SRule_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$S$Rule_0_1", context));
    varScope.addSVar("smart_Choice_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Choice_0_2", context));
    varScope.addSVar("smart_RChoice_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$R$Choice_0_2", context));
    varScope.addSVar("smart_CondChoice_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Cond$Choice_0_3", context));
    varScope.addSVar("smart_IfThen_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$If$Then_0_2", context));
    varScope.addSVar("smart_SwitchChoiceNoOtherwise_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Switch$Choice$No$Otherwise_0_2", context));
    varScope.addSVar("smart_SwitchChoice_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Switch$Choice_0_3", context));
    varScope.addSVar("smart_SwitchCase_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Switch$Case_0_2", context));
    varScope.addSVar("smart_Assign_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Assign_0_2", context));
    varScope.addSVar("smart_ListVar_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$List$Var_0_1", context));
    varScope.addSVar("smart_Var_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Var_0_1", context));
    varScope.addSVar("smart_BuildDefaultPT_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Build$Default$P$T_0_1", context));
    varScope.addSVar("smart_BuildDefault_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Build$Default_0_1", context));
    varScope.addSVar("smart_Char_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Char_0_1", context));
    varScope.addSVar("smart_AnnoList_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Anno$List_0_2", context));
    varScope.addSVar("smart_NoAnnoList_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$No$Anno$List_0_1", context));
    varScope.addSVar("smart_App_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$App_0_2", context));
    varScope.addSVar("smart_RootApp_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Root$App_0_1", context));
    varScope.addSVar("smart_Tuple_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Tuple_0_1", context));
    varScope.addSVar("smart_List_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$List_0_1", context));
    varScope.addSVar("smart_ListTail_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$List$Tail_0_2", context));
    varScope.addSVar("smart_Explode_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Explode_0_2", context));
    varScope.addSVar("smart_As_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$As_0_2", context));
    varScope.addSVar("smart_SortList_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Sort$List_0_1", context));
    varScope.addSVar("smart_SortListTl_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Sort$List$Tl_0_2", context));
    varScope.addSVar("smart_SortTuple_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Sort$Tuple_0_1", context));
    varScope.addSVar("smart_Star_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Star_0_0", context));
    varScope.addSVar("smart_StarStar_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Star$Star_0_0", context));
    varScope.addSVar("smart_Sorts_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Sorts_0_1", context));
    varScope.addSVar("smart_Constructors_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Constructors_0_1", context));
    varScope.addSVar("smart_SortVar_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Sort$Var_0_1", context));
    varScope.addSVar("smart_SortNoArgs_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Sort$No$Args_0_1", context));
    varScope.addSVar("smart_Sort_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Sort_0_2", context));
    varScope.addSVar("smart_OpDecl_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Op$Decl_0_2", context));
    varScope.addSVar("smart_OpDeclQ_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Op$Decl$Q_0_2", context));
    varScope.addSVar("smart_OpDeclInj_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Op$Decl$Inj_0_1", context));
    varScope.addSVar("smart_ExtOpDecl_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Ext$Op$Decl_0_2", context));
    varScope.addSVar("smart_ExtOpDeclQ_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Ext$Op$Decl$Q_0_2", context));
    varScope.addSVar("smart_ExtOpDeclInj_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Ext$Op$Decl$Inj_0_1", context));
    varScope.addSVar("smart_ConstType_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Const$Type_0_1", context));
    varScope.addSVar("smart_FunType_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Fun$Type_0_2", context));
    varScope.addSVar("smart_Wld_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Wld_0_0", context));
    varScope.addSVar("smart_Int_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Int_0_1", context));
    varScope.addSVar("smart_Real_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Real_0_1", context));
    varScope.addSVar("smart_Str_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Str_0_1", context));
    varScope.addSVar("smart_Op_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Op_0_2", context));
    varScope.addSVar("smart_OpQ_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Op$Q_0_2", context));
    varScope.addSVar("smart_Anno_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Anno_0_2", context));
    varScope.addSVar("smart_SVar_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$S$Var_0_1", context));
    varScope.addSVar("smart_Let_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Let_0_2", context));
    varScope.addSVar("smart_CallT_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Call$T_0_3", context));
    varScope.addSVar("smart_CallDynamic_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Call$Dynamic_0_3", context));
    varScope.addSVar("smart_SDefT_0_4", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$S$Def$T_0_4", context));
    varScope.addSVar("smart_ExtSDefInl_0_4", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Ext$S$Def$Inl_0_4", context));
    varScope.addSVar("smart_ExtSDef_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Ext$S$Def_0_3", context));
    varScope.addSVar("smart_VarDec_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Var$Dec_0_2", context));
    varScope.addSVar("smart_ParenStrat_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Paren$Strat_0_1", context));
    varScope.addSVar("smart_Fail_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Fail_0_0", context));
    varScope.addSVar("smart_Id_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Id_0_0", context));
    varScope.addSVar("smart_Match_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Match_0_1", context));
    varScope.addSVar("smart_Build_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Build_0_1", context));
    varScope.addSVar("smart_Scope_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Scope_0_2", context));
    varScope.addSVar("smart_GuardedLChoice_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Guarded$L$Choice_0_3", context));
    varScope.addSVar("smart_PrimT_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Prim$T_0_3", context));
    varScope.addSVar("smart_One_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$One_0_1", context));
    varScope.addSVar("smart_All_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$All_0_1", context));
    varScope.addSVar("smart_ImportTerm_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Import$Term_0_1", context));
    varScope.addSVar("smart_Module_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Module_0_2", context));
    varScope.addSVar("smart_Specification_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Specification_0_1", context));
    varScope.addSVar("smart_ImportWildcard_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Import$Wildcard_0_1", context));
    varScope.addSVar("smart_alias_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_alias_0_2", context));
    varScope.addSVar("smart_char_class_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_char_class_0_1", context));
    varScope.addSVar("smart_seq_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_seq_0_2", context));
    varScope.addSVar("smart_single_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_single_0_1", context));
    varScope.addSVar("smart_alt_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_alt_0_2", context));
    varScope.addSVar("smart_list_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_list_0_1", context));
    varScope.addSVar("smart_follow_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_follow_0_2", context));
    varScope.addSVar("smart_reject_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_reject_0_0", context));
    varScope.addSVar("smart_prefer_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_prefer_0_0", context));
    varScope.addSVar("smart_avoid_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_avoid_0_0", context));
    varScope.addSVar("smart_quoted_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_quoted_0_1", context));
    varScope.addSVar("smart_unquoted_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_unquoted_0_1", context));
    varScope.addSVar("smart_label_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_label_0_2", context));
    varScope.addSVar("smart_unquoted_fun_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_unquoted_fun_0_1", context));
    varScope.addSVar("smart_quoted_fun_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_quoted_fun_0_1", context));
    varScope.addSVar("smart_lit_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_lit_0_1", context));
    varScope.addSVar("smart_ci_lit_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_ci_lit_0_1", context));
    varScope.addSVar("smart_prefix_fun_0_4", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_prefix_fun_0_4", context));
    varScope.addSVar("smart_kernel_start_symbols_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_kernel_start_symbols_0_1", context));
    varScope.addSVar("smart_lexical_start_symbols_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_lexical_start_symbols_0_1", context));
    varScope.addSVar("smart_context_free_start_symbols_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_context_free_start_symbols_0_1", context));
    varScope.addSVar("smart_sort_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_sort_0_1", context));
    varScope.addSVar("smart_parameterized_sort_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_parameterized_sort_0_2", context));
    varScope.addSVar("smart_numeric_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_numeric_0_1", context));
    varScope.addSVar("smart_short_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_short_0_1", context));
    varScope.addSVar("smart_top_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_top_0_0", context));
    varScope.addSVar("smart_eof_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_eof_0_0", context));
    varScope.addSVar("smart_bot_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_bot_0_0", context));
    varScope.addSVar("smart_label__start_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_label__start_0_0", context));
    varScope.addSVar("smart_range_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_range_0_2", context));
    varScope.addSVar("smart_conc_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_conc_0_2", context));
    varScope.addSVar("smart_absent_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_absent_0_0", context));
    varScope.addSVar("smart_present_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_present_0_1", context));
    varScope.addSVar("smart_simple_charclass_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_simple_charclass_0_1", context));
    varScope.addSVar("smart_comp_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_comp_0_1", context));
    varScope.addSVar("smart_diff_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_diff_0_2", context));
    varScope.addSVar("smart_isect_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_isect_0_2", context));
    varScope.addSVar("smart_union_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_union_0_2", context));
    varScope.addSVar("smart_left_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_left_0_0", context));
    varScope.addSVar("smart_right_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_right_0_0", context));
    varScope.addSVar("smart_non_assoc_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_non_assoc_0_0", context));
    varScope.addSVar("smart_assoc_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_assoc_0_0", context));
    varScope.addSVar("smart_bracket_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_bracket_0_0", context));
    varScope.addSVar("smart_assoc_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_assoc_0_1", context));
    varScope.addSVar("smart_default_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_default_0_1", context));
    varScope.addSVar("smart_with_arguments_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_with_arguments_0_2", context));
    varScope.addSVar("smart_non_transitive_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_non_transitive_0_1", context));
    varScope.addSVar("smart_simple_group_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_simple_group_0_1", context));
    varScope.addSVar("smart_prods_group_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_prods_group_0_1", context));
    varScope.addSVar("smart_assoc_group_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_assoc_group_0_2", context));
    varScope.addSVar("smart_chain_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_chain_0_1", context));
    varScope.addSVar("smart_assoc_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_assoc_0_3", context));
    varScope.addSVar("smart_lifting_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_lifting_0_1", context));
    varScope.addSVar("smart_empty_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_empty_0_0", context));
    varScope.addSVar("smart_opt_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_opt_0_1", context));
    varScope.addSVar("smart_iter_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_iter_0_1", context));
    varScope.addSVar("smart_iter_star_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_iter_star_0_1", context));
    varScope.addSVar("smart_iter_sep_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_iter_sep_0_2", context));
    varScope.addSVar("smart_iter_star_sep_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_iter_star_sep_0_2", context));
    varScope.addSVar("smart_tuple_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_tuple_0_2", context));
    varScope.addSVar("smart_func_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_func_0_2", context));
    varScope.addSVar("smart_strategy_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_strategy_0_2", context));
    varScope.addSVar("smart_renamings_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_renamings_0_1", context));
    varScope.addSVar("smart_symbol_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_symbol_0_2", context));
    varScope.addSVar("smart_production_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_production_0_2", context));
    varScope.addSVar("smart_module_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_module_0_3", context));
    varScope.addSVar("smart_exports_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_exports_0_1", context));
    varScope.addSVar("smart_hiddens_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_hiddens_0_1", context));
    varScope.addSVar("smart_unparameterized_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_unparameterized_0_1", context));
    varScope.addSVar("smart_parameterized_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_parameterized_0_2", context));
    varScope.addSVar("smart_id_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_id_0_1", context));
    varScope.addSVar("smart_imports_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_imports_0_1", context));
    varScope.addSVar("smart_imp_section_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_imp_section_0_1", context));
    varScope.addSVar("smart_module_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_module_0_1", context));
    varScope.addSVar("smart_renamed_module_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_renamed_module_0_2", context));
    varScope.addSVar("smart_cf_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_cf_0_1", context));
    varScope.addSVar("smart_lex_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_lex_0_1", context));
    varScope.addSVar("smart_varsym_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_varsym_0_1", context));
    varScope.addSVar("smart_layout_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_layout_0_0", context));
    varScope.addSVar("smart_empty_grammar_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_empty_grammar_0_0", context));
    varScope.addSVar("smart_conc_grammars_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_conc_grammars_0_2", context));
    varScope.addSVar("smart_real_con_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_real_con_0_3", context));
    varScope.addSVar("smart_natural_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_natural_0_1", context));
    varScope.addSVar("smart_positive_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_positive_0_1", context));
    varScope.addSVar("smart_negative_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_negative_0_1", context));
    varScope.addSVar("smart_int_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_int_0_1", context));
    varScope.addSVar("smart_real_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_real_0_1", context));
    varScope.addSVar("smart_fun_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_fun_0_1", context));
    varScope.addSVar("smart_appl_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_appl_0_2", context));
    varScope.addSVar("smart_placeholder_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_placeholder_0_1", context));
    varScope.addSVar("smart_annotated_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_annotated_0_2", context));
    varScope.addSVar("smart_term_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_term_0_1", context));
    varScope.addSVar("smart_attrs_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_attrs_0_1", context));
    varScope.addSVar("smart_no_attrs_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_no_attrs_0_0", context));
    varScope.addSVar("smart_prod_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_prod_0_3", context));
    varScope.addSVar("smart_start_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_start_0_0", context));
    varScope.addSVar("smart_file_start_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_file_start_0_0", context));
    varScope.addSVar("smart_definition_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_definition_0_1", context));
    varScope.addSVar("smart_PlainDec_0_2", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Plain$Dec_0_2", context));
    varScope.addSVar("smart_PlainDecHead_0_3", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Plain$Dec$Head_0_3", context));
    varScope.addSVar("smart_PlainBody_0_1", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.smart_$Plain$Body_0_1", context));
    varScope.addSVar("accept_sdf_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.accept_sdf_0_0", context));
    varScope.addSVar("accept_str_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.accept_str_0_0", context));
    varScope.addSVar("singleton_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.singleton_0_0", context));
    varScope.addSVar("children_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.children_0_0", context));
    varScope.addSVar("filter_children_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.filter_children_1_0", context));
    varScope.addSVar("empty_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.empty_0_0", context));
    varScope.addSVar("extract_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.extract_1_0", context));
    varScope.addSVar("filter_tree_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.filter_tree_1_0", context));
    varScope.addSVar("comp_desugarings_to_sdf_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.comp_desugarings_to_sdf_0_0", context));
    varScope.addSVar("comp_desugaring_to_sdf_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.comp_desugaring_to_sdf_0_0", context));
    varScope.addSVar("fold_conc_grammars_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.fold_conc_grammars_0_0", context));
    varScope.addSVar("main_sdf_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.main_sdf_0_0", context));
    varScope.addSVar("extract_sdf_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.extract_sdf_0_0", context));
    varScope.addSVar("comp_desugarings_to_str_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.comp_desugarings_to_str_0_0", context));
    varScope.addSVar("comp_desugaring_to_str_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.comp_desugaring_to_str_0_0", context));
    varScope.addSVar("mainSTR_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.main$S$T$R_0_0", context));
    varScope.addSVar("extract_str_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.extract_str_0_0", context));
    varScope.addSVar("Locked_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Locked_1_0", context));
    varScope.addSVar("EmptyCollection_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Empty$Collection_0_0", context));
    varScope.addSVar("ToModelTerm_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$To$Model$Term_1_0", context));
    varScope.addSVar("TransformationDef_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Transformation$Def_2_0", context));
    varScope.addSVar("Strategies_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Strategies_1_0", context));
    varScope.addSVar("Signature_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Signature_1_0", context));
    varScope.addSVar("Rules_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Rules_1_0", context));
    varScope.addSVar("Overlays_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Overlays_1_0", context));
    varScope.addSVar("TransApp_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Trans$App_2_0", context));
    varScope.addSVar("grammar_elem_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.grammar_elem_1_0", context));
    varScope.addSVar("transformation_elem_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.transformation_elem_1_0", context));
    varScope.addSVar("sorts_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.sorts_1_0", context));
    varScope.addSVar("syntax_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.syntax_1_0", context));
    varScope.addSVar("lexical_syntax_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.lexical_syntax_1_0", context));
    varScope.addSVar("context_free_syntax_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.context_free_syntax_1_0", context));
    varScope.addSVar("variables_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.variables_1_0", context));
    varScope.addSVar("lexical_variables_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.lexical_variables_1_0", context));
    varScope.addSVar("priorities_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.priorities_1_0", context));
    varScope.addSVar("lexical_priorities_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.lexical_priorities_1_0", context));
    varScope.addSVar("context_free_priorities_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.context_free_priorities_1_0", context));
    varScope.addSVar("restrictions_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.restrictions_1_0", context));
    varScope.addSVar("lexical_restrictions_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.lexical_restrictions_1_0", context));
    varScope.addSVar("context_free_restrictions_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.context_free_restrictions_1_0", context));
    varScope.addSVar("aliases_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.aliases_1_0", context));
    varScope.addSVar("Desugarings_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Desugarings_1_0", context));
    varScope.addSVar("Analyses_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Analyses_1_0", context));
    varScope.addSVar("PureDesugaring_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Pure$Desugaring_1_0", context));
    varScope.addSVar("InjectDesugaring_4_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Inject$Desugaring_4_0", context));
    varScope.addSVar("Refactorings_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Refactorings_2_0", context));
    varScope.addSVar("PPTable_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$P$P$Table_1_0", context));
    varScope.addSVar("PrettyPrint_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Pretty$Print_1_0", context));
    varScope.addSVar("Refactoring_4_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Refactoring_4_0", context));
    varScope.addSVar("Builders_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Builders_2_0", context));
    varScope.addSVar("SemanticObserver_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Semantic$Observer_1_0", context));
    varScope.addSVar("Builder_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Builder_3_0", context));
    varScope.addSVar("BuilderCaption_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Builder$Caption_1_0", context));
    varScope.addSVar("OpenEditor_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Open$Editor_0_0", context));
    varScope.addSVar("RealTime_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Real$Time_0_0", context));
    varScope.addSVar("Persistent_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Persistent_0_0", context));
    varScope.addSVar("Meta_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Meta_0_0", context));
    varScope.addSVar("Cursor_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Cursor_0_0", context));
    varScope.addSVar("Source_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Source_0_0", context));
    varScope.addSVar("Completions_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Completions_2_0", context));
    varScope.addSVar("CompletionProposer_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Completion$Proposer_1_0", context));
    varScope.addSVar("IdentifierLexical_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Identifier$Lexical_1_0", context));
    varScope.addSVar("CompletionKeyword_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Completion$Keyword_2_0", context));
    varScope.addSVar("CompletionTemplate_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Completion$Template_3_0", context));
    varScope.addSVar("CompletionTemplateWithSort_4_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Completion$Template$With$Sort_4_0", context));
    varScope.addSVar("CompletionTrigger_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Completion$Trigger_2_0", context));
    varScope.addSVar("Placeholder_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Placeholder_1_0", context));
    varScope.addSVar("Disable_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Disable_0_0", context));
    varScope.addSVar("Blank_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Blank_0_0", context));
    varScope.addSVar("References_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$References_2_0", context));
    varScope.addSVar("ReferenceHoverRule_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Reference$Hover$Rule_3_0", context));
    varScope.addSVar("ReferenceRule_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Reference$Rule_2_0", context));
    varScope.addSVar("HoverRule_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Hover$Rule_2_0", context));
    varScope.addSVar("OccurrenceRule_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Occurrence$Rule_2_0", context));
    varScope.addSVar("Colorer_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Colorer_2_0", context));
    varScope.addSVar("ColorRuleAll_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Color$Rule$All_2_0", context));
    varScope.addSVar("ColorRule_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Color$Rule_2_0", context));
    varScope.addSVar("ColorRuleAllNamed_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Color$Rule$All$Named_3_0", context));
    varScope.addSVar("ColorRuleNamed_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Color$Rule$Named_3_0", context));
    varScope.addSVar("Attribute_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Attribute_3_0", context));
    varScope.addSVar("AttributeRef_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Attribute$Ref_1_0", context));
    varScope.addSVar("Token_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Token_1_0", context));
    varScope.addSVar("Literal_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Literal_1_0", context));
    varScope.addSVar("TK__IDENTIFIER_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$T$K__$I$D$E$N$T$I$F$I$E$R_0_0", context));
    varScope.addSVar("TK__NUMBER_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$T$K__$N$U$M$B$E$R_0_0", context));
    varScope.addSVar("TK__LAYOUT_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$T$K__$L$A$Y$O$U$T_0_0", context));
    varScope.addSVar("TK__STRING_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$T$K__$S$T$R$I$N$G_0_0", context));
    varScope.addSVar("TK__KEYWORD_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$T$K__$K$E$Y$W$O$R$D_0_0", context));
    varScope.addSVar("TK__OPERATOR_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$T$K__$O$P$E$R$A$T$O$R_0_0", context));
    varScope.addSVar("TK__VAR_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$T$K__$V$A$R_0_0", context));
    varScope.addSVar("TK__ERROR_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$T$K__$E$R$R$O$R_0_0", context));
    varScope.addSVar("TK__UNKNOWN_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$T$K__$U$N$K$N$O$W$N_0_0", context));
    varScope.addSVar("NORMAL_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$N$O$R$M$A$L_0_0", context));
    varScope.addSVar("BOLD_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$B$O$L$D_0_0", context));
    varScope.addSVar("ITALIC_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$I$T$A$L$I$C_0_0", context));
    varScope.addSVar("BOLD__ITALIC_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$B$O$L$D__$I$T$A$L$I$C_0_0", context));
    varScope.addSVar("ColorDefault_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Color$Default_0_0", context));
    varScope.addSVar("ColorRGB_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Color$R$G$B_3_0", context));
    varScope.addSVar("NoColor_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$No$Color_0_0", context));
    varScope.addSVar("ColorDef_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Color$Def_2_0", context));
    varScope.addSVar("Outliner_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Outliner_2_0", context));
    varScope.addSVar("OutlineRule_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Outline$Rule_1_0", context));
    varScope.addSVar("Folding_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Folding_2_0", context));
    varScope.addSVar("FoldRule_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Fold$Rule_2_0", context));
    varScope.addSVar("FoldRuleAll_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Fold$Rule$All_2_0", context));
    varScope.addSVar("Folded_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Folded_0_0", context));
    varScope.addSVar("SemanticProvider_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Semantic$Provider_1_0", context));
    varScope.addSVar("OnSave_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$On$Save_2_0", context));
    varScope.addSVar("Strategy_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Strategy_1_0", context));
    varScope.addSVar("Attribute_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Attribute_1_0", context));
    varScope.addSVar("Language_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Language_2_0", context));
    varScope.addSVar("Values_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Values_1_0", context));
    varScope.addSVar("LanguageName_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Language$Name_1_0", context));
    varScope.addSVar("LanguageId_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Language$Id_1_0", context));
    varScope.addSVar("Extensions_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Extensions_1_0", context));
    varScope.addSVar("Description_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Description_1_0", context));
    varScope.addSVar("Table_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Table_1_0", context));
    varScope.addSVar("TableProvider_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Table$Provider_1_0", context));
    varScope.addSVar("StartSymbols_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Start$Symbols_1_0", context));
    varScope.addSVar("URL_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$U$R$L_1_0", context));
    varScope.addSVar("Extends_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Extends_1_0", context));
    varScope.addSVar("Aliases_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Aliases_1_0", context));
    varScope.addSVar("UnmanagedTablePrefix_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Unmanaged$Table$Prefix_1_0", context));
    varScope.addSVar("LineCommentPrefix_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Line$Comment$Prefix_1_0", context));
    varScope.addSVar("BlockCommentDefs_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Block$Comment$Defs_1_0", context));
    varScope.addSVar("FenceDefs_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Fence$Defs_1_0", context));
    varScope.addSVar("IndentDefs_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Indent$Defs_1_0", context));
    varScope.addSVar("BlockCommentDef_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Block$Comment$Def_3_0", context));
    varScope.addSVar("NoContinuation_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$No$Continuation_0_0", context));
    varScope.addSVar("FenceDef_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Fence$Def_2_0", context));
    varScope.addSVar("IndentDef_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Indent$Def_1_0", context));
    varScope.addSVar("Sort_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Sort_1_0", context));
    varScope.addSVar("ListSort_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$List$Sort_1_0", context));
    varScope.addSVar("String_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$String_1_0", context));
    varScope.addSVar("ConstructorOnly_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Constructor$Only_1_0", context));
    varScope.addSVar("Constructor_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Constructor_1_0", context));
    varScope.addSVar("SortAndConstructor_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Sort$And$Constructor_2_0", context));
    varScope.addSVar("Module_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Module_3_0", context));
    varScope.addSVar("Imports_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Imports_1_0", context));
    varScope.addSVar("NoImports_0_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$No$Imports_0_0", context));
    varScope.addSVar("Import_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Import_1_0", context));
    varScope.addSVar("ImportRenamed_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Import$Renamed_2_0", context));
    varScope.addSVar("OverlayNoArgs_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Overlay$No$Args_2_0", context));
    varScope.addSVar("Overlay_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Overlay_3_0", context));
    varScope.addSVar("DynRuleScope_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Dyn$Rule$Scope_2_0", context));
    varScope.addSVar("ScopeLabels_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Scope$Labels_1_0", context));
    varScope.addSVar("GenDynRules_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Gen$Dyn$Rules_1_0", context));
    varScope.addSVar("AddScopeLabel_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Add$Scope$Label_2_0", context));
    varScope.addSVar("UndefineDynRule_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Undefine$Dyn$Rule_2_0", context));
    varScope.addSVar("SetDynRule_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Set$Dyn$Rule_2_0", context));
    varScope.addSVar("AddDynRule_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Add$Dyn$Rule_2_0", context));
    varScope.addSVar("SetDynRuleMatch_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Set$Dyn$Rule$Match_2_0", context));
    varScope.addSVar("DynRuleAssign_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Dyn$Rule$Assign_2_0", context));
    varScope.addSVar("DynRuleAssignAdd_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Dyn$Rule$Assign$Add_2_0", context));
    varScope.addSVar("SetDynRuleDepends_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Set$Dyn$Rule$Depends_3_0", context));
    varScope.addSVar("LabeledDynRuleId_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Labeled$Dyn$Rule$Id_2_0", context));
    varScope.addSVar("AddLabelDynRuleId_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Add$Label$Dyn$Rule$Id_2_0", context));
    varScope.addSVar("DynRuleId_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Dyn$Rule$Id_1_0", context));
    varScope.addSVar("LabeledDynRuleScopeId_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Labeled$Dyn$Rule$Scope$Id_2_0", context));
    varScope.addSVar("DynRuleScopeId_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Dyn$Rule$Scope$Id_1_0", context));
    varScope.addSVar("RDecNoArgs_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$R$Dec$No$Args_1_0", context));
    varScope.addSVar("RDec_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$R$Dec_2_0", context));
    varScope.addSVar("RDecT_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$R$Dec$T_3_0", context));
    varScope.addSVar("RuleNames_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Rule$Names_1_0", context));
    varScope.addSVar("DynRuleIntersectFix_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Dyn$Rule$Intersect$Fix_2_0", context));
    varScope.addSVar("DynRuleUnionFix_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Dyn$Rule$Union$Fix_2_0", context));
    varScope.addSVar("DynRuleIntersectUnionFix_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Dyn$Rule$Intersect$Union$Fix_3_0", context));
    varScope.addSVar("DynRuleIntersect_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Dyn$Rule$Intersect_3_0", context));
    varScope.addSVar("DynRuleUnion_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Dyn$Rule$Union_3_0", context));
    varScope.addSVar("DynRuleIntersectUnion_4_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Dyn$Rule$Intersect$Union_4_0", context));
    varScope.addSVar("BA_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$B$A_2_0", context));
    varScope.addSVar("AM_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$A$M_2_0", context));
    varScope.addSVar("Seq_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Seq_2_0", context));
    varScope.addSVar("RDefNoArgs_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$R$Def$No$Args_2_0", context));
    varScope.addSVar("RDef_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$R$Def_3_0", context));
    varScope.addSVar("RDefT_4_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$R$Def$T_4_0", context));
    varScope.addSVar("RuleNoCond_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Rule$No$Cond_2_0", context));
    varScope.addSVar("Rule_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Rule_3_0", context));
    varScope.addSVar("WhereClause_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Where$Clause_1_0", context));
    varScope.addSVar("WithClause_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$With$Clause_1_0", context));
    varScope.addSVar("SDefNoArgs_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$S$Def$No$Args_2_0", context));
    varScope.addSVar("SDef_3_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$S$Def_3_0", context));
    varScope.addSVar("DefaultVarDec_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Default$Var$Dec_1_0", context));
    varScope.addSVar("Call_2_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Call_2_0", context));
    varScope.addSVar("ScopeDefault_1_0", new InteropSDefT(classLoader, "org.sugarj.driver.transformations.extraction.$Scope$Default_1_0", context));
  }
}