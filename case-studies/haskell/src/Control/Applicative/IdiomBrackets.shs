module Control.Applicative.IdiomBrackets where

import org.sugarj.languages.Haskell

import Meta.Concrete.Haskell
import Meta.LiftToTop

context-free syntax
  "(|" PurePart EffectfulPart* "|)" -> HaskellExp {cons("IdiomBrackets")}
  "(|" HaskellExp HaskellQvarsym HaskellExp "|)" -> HaskellExp {cons("VarInfixIdiomBrackets")}
  "(|" HaskellExp HaskellGconsym HaskellExp "|)" -> HaskellExp {cons("ConInfixIdiomBrackets")}

  HaskellExp -> PurePart
  HaskellExp -> EffectfulPart

context-free priorities
{ HaskellExp -> PurePart
  HaskellExp -> EffectfulPart }
> HaskellQvar "@" HaskellExp -> HaskellExp 

desugarings
  desugar-idiom-brackets

rules
  desugar-idiom-brackets :
    IdiomBrackets(f, args) ->
    <apply-effectful; ensure-import(|["Control","Applicative"])>
      (|[ Control.Applicative.pure $f ]|, args)

  desugar-idiom-brackets :
    VarInfixIdiomBrackets(e1, var, e2) ->
    IdiomBrackets(Constr(BinOp(var)), [e1, e2])

  desugar-idiom-brackets :
    ConInfixIdiomBrackets(e1, con, e2) ->
    IdiomBrackets(Constr(BinCon(con)), [e1, e2])

  apply-effectful :
    (f,[]) -> f
  apply-effectful :
    (f,[x|xs]) -> <apply-effectful> (|[ $f Control.Applicative.<*> $x ]|, xs)
