package closure;

import closure.Syntax;

import org.sugarj.languages.Java;

public analysis Analysis {
  rules
    /*
     * this is approximate: we ignore that methods in anonymous class expressions bind variables
     */
    free-local-vars-expr : ExprName(Id(name)) -> [name]
    free-local-vars-expr : AmbName(Id(name)) -> [name]
    
    free-local-vars-expr : Closure(_, _, Id(v), e) -> free-vars
      where all-vars := <free-local-vars-expr> e
          ; free-vars := <filter(not(?v))> all-vars
    
    free-local-vars-expr : c#(xs) -> <mapconcat(free-local-vars-expr)> xs
    
  warnings
    Closure(_, _, Id(v), e) =
    [(v, <concat-strings> ["unused variable: ", v])]
      where all-vars := <free-local-vars-expr> e
          ; <debug(!"is free? ")> v
          ; <debug(!"in: ")> all-vars
          ; [v] := <filter(?v)> all-vars
}