package impl;

import variability.Java;

model import impl.EdgeIfc;
model import impl.Vertex;


#feature(SearchBase)
public variable class Edge implements EdgeIfc {
  private Vertex start;
  private Vertex end;
  public Edge(  Vertex the_start,  Vertex the_end, #feature(Weighted) int aweight) {
    start=the_start;
    end=the_end;
    #feature(Weighted) weight=aweight;
  }
  public void adjustAdorns(EdgeIfc the_edge) {
    #feature(Weighted) setWeight(the_edge.getWeight());
  }
  #feature(Weighted) private int weight;
  #feature(Weighted)
	  public void setWeight(  int weight){
	    this.weight=weight;
	  }
  #feature(Weighted)
	  public int getWeight() {
	    return this.weight;
	  }
  public Vertex getOtherVertex(Vertex vertex) {
    if (vertex == start) return end;
    else if (vertex == end) return start;
    else return null;
  }
  public Vertex getStart() {
    return start;
  }
  public Vertex getEnd() {
    return end;
  }
  public void display() {
    #feature(Weighted)
      System.out.print(" Weight=" + weight);
    System.out.println(" start=" + start.getName() + " end="+ end.getName());
  }
}
