package impl;

import variability.Java;

import model impl.Vertex;
import model impl.Edge;
import model impl.EdgeIfc;
import impl.NeighborIfc;


public variable class Neighbor implements 
  #feature(GNOnlyNeighbours) EdgeIfc, 
  NeighborIfc {

  #feature(GNOnlyNeighbours)
  public Vertex neighbor;

  public Neighbor(){
    #feature(GNOnlyNeighbours) neighbor=null;
    #feature(GenEdges) end=null;
    #feature(GenEdges) edge=null;
  }
  
  #feature(GNOnlyNeighbours)
  public Neighbor(Vertex theNeighbor, #feature(Weighted) int aweight) {
    neighbor=theNeighbor;
    #feature(Weighted) weight=aweight;
  }

  #feature(GNOnlyNeighbours)
  public void display(){
    System.out.print(neighbor.name + " ,");
  }

  #feature(GNOnlyNeighbours)
  public Vertex getStart(){
    return null;
  }

  #feature(GNOnlyNeighbours)
  public Vertex getEnd(){
    return neighbor;
  }

  #feature(Weighted && GNOnlyNeighbours)
  public int weight;

  #feature(Weighted && GNOnlyNeighbours)
  public void setWeight(  int weight){
    this.weight=weight;
  }

  #feature(Weighted && GNOnlyNeighbours)
  public int getWeight(){
    return this.weight;
  }

  #feature(GNOnlyNeighbours)
  public Vertex getOtherVertex(  Vertex vertex){
    return neighbor;
  }

  #feature(GNOnlyNeighbours)
  public void adjustAdorns(  EdgeIfc the_edge){
  }

  #feature(GenEdges)
  public Vertex end;

  #feature(GenEdges)
  public Edge edge;

  #feature(GenEdges)
  public Neighbor(  Vertex v,  Edge e){
    end=v;
    edge=e;
  }
}
