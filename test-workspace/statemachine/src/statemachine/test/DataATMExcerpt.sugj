package statemachine.test;

import statemachine.Language;

import statemachine.data.InternalData;
import statemachine.data.ParametricEvent;
import statemachine.data.TransitionCondition;
import statemachine.data.TransitionEffect;

model import entity.test.Account;


public statemachine DataATMExcerpt {
  initial state Init 

  data acc :: Account
  data pinCount :: Integer

  event InsertCard(Account)
  event Cancel
  event Pin(String)
  event Amount(Integer)
  event MoneyTaken
  event CardTaken
  event CardRevoked

  state Init {
    InsertCard(clientAcc) => Withdraw

    Cancel => Init
  }

  state Withdraw {
    Pin(p) if pinCount < 3 && p == acc.pin
      => HowMuch

    Pin(p) if pinCount >= 3 || p != acc.pin
      => Withdraw

    Cancel => ReturnCard
  }

  state HowMuch {
    Amount(amount) if amount < 2000 && amount < acc.balance
      => GiveMoney

    Cancel => ReturnCard
  }

  state GiveMoney {
    MoneyTaken => ReturnCard
  }

  state ReturnCard {
    CardTaken => Init
  }

  state RevokeCard {
    CardRevoked => Init
  }
}