package statemachine.test;

import statemachine.ToJava;

public transformation TransTest {


rules
  main = recursively-transform(main-statemachine_ToJava)

  recursively-transform(trans) =
    {| Renamings:
      rules( Renamings := [] ); 
      topdown(try(
        {term, pkgs, name, model-path, model, generated:
          ?term;
          get-imported-model(conforms-to-metamodel(|"Statemachine")) => (pkgs, name, model-path, model);
          <trans> model => generated;
          where(recursively-transform(trans));
          prim("SUGARJ_compile", model-path, "statemachine/test/TransTest");
          rules( Renamings := [ (pkgs, name, (<conc-strings> (name, "$statemachine_test_TransTest")))
                              | <Renamings>]);
        }));
      apply-renamings(|<Renamings>)
    |}

  get-imported-model(predicate) =
    ?TypeImportDec(<id>);
    import-model-path => (pkgs, name);
    <build-path> (pkgs, name) => path;
    prim("SUGARJ_resolve_model") => model;
    where(predicate);
    !(pkgs, name, path, model)

  conforms-to-metamodel(|meta-model) =
    collect-one(?ModelBody((meta-model, _)))

  import-model-path : TypeName(Id(name)) -> ([], name)
  import-model-path : TypeName(pkg, Id(name)) -> (<import-model-pkg> pkg, name)

  import-model-pkg : PackageOrTypeName(Id(name)) -> [name]
  import-model-pkg : PackageOrTypeName(pkg, Id(name)) -> <conc> (<import-model-pkg> pkg, [name])

  build-path : ([], name) -> name
  build-path : ([pkg|pkgs], name) -> <conc-strings> (pkg, "/", <build-path> (pkgs, name))

  apply-renamings(|renamings) =
    <?[(pkg, from, to)|rest]> renamings
      < rename-java(|pkg, from, to); apply-renamings(|rest)
      + id


rules
  main-int =
    ?this__
    ; ?this__
    ; where(collect-one(?PackageDec(_, <id>)) => pkg)
    ; where(collect-one(?ModelDecHead(_, <id>)) => classname)
    ; !SugarCompilationUnit(
         Some(PackageDec([], pkg))
       , [ TypeImportDec(
             TypeName(
               PackageOrTypeName(
                 PackageOrTypeName(Id("java"))
               , Id("lang")
               )
             , Id("IllegalArgumentException")
             )
           )
         ]
       , [ JavaTypeDec(
             ClassDec(
               ClassDecHead(
                 [Public()]
               , classname
               , None()
               , None()
               , None()
               )
             , ClassBody(
                 [InterfaceDec(
                    InterfaceDecHead(
                      [Public()|[Static()]]
                    , Id("Event")
                    , None()
                    , None()
                    )
                  , []
                  )|<conc> ( <all-events-as-classes> this__
                           , [InterfaceDec(
                                InterfaceDecHead(
                                  [Public()|[Static()]]
                                , Id("State")
                                , None()
                                , None()
                                )
                              , [ AbstractMethodDec(
                                    [Public()]
                                  , None()
                                  , ClassOrInterfaceType(
                                      TypeName(Id("State"))
                                    , None()
                                    )
                                  , Id("step")
                                  , [ Param(
                                        []
                                      , ClassOrInterfaceType(
                                          TypeName(Id("Event"))
                                        , None()
                                        )
                                      , Id("e")
                                      )
                                    ]
                                  , None()
                                  )
                                ]
                              )|<conc> ( <collect-all(?State(_, _))
                                          ; mapconcat(
                                              {this__, name, transitions, this__, t:
                                                ( this__@this__@State(name, transitions) -> [FieldDec(
                                                                                               [Private()|[Final()]]
                                                                                             , ClassOrInterfaceType(
                                                                                                 TypeName(Id("State"))
                                                                                               , None()
                                                                                               )
                                                                                             , [ VarDec(
                                                                                                   Id(
                                                                                                     <conc-strings> ( <?Id(<id>)> name
                                                                                                                    , <?Id(<id>)> Id("_instance")
                                                                                                                    )
                                                                                                   )
                                                                                                 , NewInstance(
                                                                                                     None()
                                                                                                   , ClassOrInterfaceType(TypeName(name), None())
                                                                                                   , []
                                                                                                   , None()
                                                                                                   )
                                                                                                 )
                                                                                               ]
                                                                                             )|[MethodDec(
                                                                                                  MethodDecHead(
                                                                                                    [Public()]
                                                                                                  , None()
                                                                                                  , ClassOrInterfaceType(
                                                                                                      TypeName(Id("State"))
                                                                                                    , None()
                                                                                                    )
                                                                                                  , Id(
                                                                                                      <conc-strings> ( <?Id(<id>)> Id("state_")
                                                                                                                     , <?Id(<id>)> name
                                                                                                                     )
                                                                                                    )
                                                                                                  , []
                                                                                                  , None()
                                                                                                  )
                                                                                                , Block(
                                                                                                    [ Return(
                                                                                                        Some(
                                                                                                          ExprName(
                                                                                                            Id(
                                                                                                              <conc-strings> ( <?Id(<id>)> name
                                                                                                                             , <?Id(<id>)> Id("_instance")
                                                                                                                             )
                                                                                                            )
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    ]
                                                                                                  )
                                                                                                )|[ ClassDec(
                                                                                                      ClassDecHead(
                                                                                                        [Public()]
                                                                                                      , name
                                                                                                      , None()
                                                                                                      , None()
                                                                                                      , Some(
                                                                                                          ImplementsDec(
                                                                                                            [ InterfaceType(
                                                                                                                TypeName(Id("State"))
                                                                                                              , None()
                                                                                                              )
                                                                                                            ]
                                                                                                          )
                                                                                                        )
                                                                                                      )
                                                                                                    , ClassBody(
                                                                                                        [ConstrDec(
                                                                                                           ConstrDecHead(
                                                                                                             [Private()]
                                                                                                           , None()
                                                                                                           , name
                                                                                                           , []
                                                                                                           , None()
                                                                                                           )
                                                                                                         , ConstrBody(None(), [])
                                                                                                         )|[MethodDec(
                                                                                                              MethodDecHead(
                                                                                                                [Public()]
                                                                                                              , None()
                                                                                                              , ClassOrInterfaceType(
                                                                                                                  TypeName(Id("String"))
                                                                                                                , None()
                                                                                                                )
                                                                                                              , Id("toString")
                                                                                                              , []
                                                                                                              , None()
                                                                                                              )
                                                                                                            , Block(
                                                                                                                [ Return(
                                                                                                                    Some(<<id-as-string> name> this__)
                                                                                                                  )
                                                                                                                ]
                                                                                                              )
                                                                                                            )|[ MethodDec(
                                                                                                                  MethodDecHead(
                                                                                                                    [Public()]
                                                                                                                  , None()
                                                                                                                  , ClassOrInterfaceType(
                                                                                                                      TypeName(Id("State"))
                                                                                                                    , None()
                                                                                                                    )
                                                                                                                  , Id("step")
                                                                                                                  , [ Param(
                                                                                                                        []
                                                                                                                      , ClassOrInterfaceType(
                                                                                                                          TypeName(Id("Event"))
                                                                                                                        , None()
                                                                                                                        )
                                                                                                                      , Id("e")
                                                                                                                      )
                                                                                                                    ]
                                                                                                                  , None()
                                                                                                                  )
                                                                                                                , Block(
                                                                                                                    <conc> ( <!transitions
                                                                                                                              ; mapconcat(
                                                                                                                                  {this__, t:
                                                                                                                                    ( this__@this__@t -> If(
                                                                                                                                                           <<transition-premise> t> this__
                                                                                                                                                         , Block(
                                                                                                                                                             <conc> (<<transition-consequence> t> this__, [])
                                                                                                                                                           )
                                                                                                                                                         ) )
                                                                                                                                  }
                                                                                                                                  ; (is-list <+ ![<id>])
                                                                                                                                )> this__
                                                                                                                           , [ Throw(
                                                                                                                                 NewInstance(
                                                                                                                                   None()
                                                                                                                                 , ClassOrInterfaceType(
                                                                                                                                     TypeName(Id("IllegalArgumentException"))
                                                                                                                                   , None()
                                                                                                                                   )
                                                                                                                                 , [ Plus(
                                                                                                                                       Lit(
                                                                                                                                         String([Chars("Unexpected event ")])
                                                                                                                                       )
                                                                                                                                     , ExprName(Id("e"))
                                                                                                                                     )
                                                                                                                                   ]
                                                                                                                                 , None()
                                                                                                                                 )
                                                                                                                               )
                                                                                                                             ]
                                                                                                                           )
                                                                                                                  )
                                                                                                                )
                                                                                                              ]]]
                                                                                                      )
                                                                                                    )
                                                                                                  ]]] )
                                              }
                                              ; (is-list <+ ![<id>])
                                            )> this__
                                       , [Semicolon()|[FieldDec(
                                                         [Private()]
                                                       , ClassOrInterfaceType(
                                                           TypeName(Id("State"))
                                                         , None()
                                                         )
                                                       , [ VarDec(
                                                             Id("state")
                                                           , ExprName(
                                                               Id(
                                                                 <conc-strings> ( <?Id(<id>)> <collect-one(?InitialState(<id>))> this__
                                                                                , <?Id(<id>)> Id("_instance")
                                                                                )
                                                               )
                                                             )
                                                           )
                                                         ]
                                                       )|[MethodDec(
                                                            MethodDecHead(
                                                              [Public()]
                                                            , None()
                                                            , ClassOrInterfaceType(
                                                                TypeName(Id("State"))
                                                              , None()
                                                              )
                                                            , Id("step")
                                                            , [ Param(
                                                                  []
                                                                , ClassOrInterfaceType(
                                                                    TypeName(Id("Event"))
                                                                  , None()
                                                                  )
                                                                , Id("e")
                                                                )
                                                              ]
                                                            , None()
                                                            )
                                                          , Block(
                                                              [ExprStm(
                                                                 Assign(
                                                                   ExprName(Id("state"))
                                                                 , Invoke(
                                                                     Method(
                                                                       MethodName(
                                                                         AmbName(Id("state"))
                                                                       , Id("step")
                                                                       )
                                                                     )
                                                                   , [ExprName(Id("e"))]
                                                                   )
                                                                 )
                                                               )|[ Return(
                                                                     Some(ExprName(Id("state")))
                                                                   )
                                                                 ]]
                                                            )
                                                          )|[MethodDec(
                                                               MethodDecHead(
                                                                 [Public()]
                                                               , None()
                                                               , ClassOrInterfaceType(
                                                                   TypeName(Id("State"))
                                                                 , None()
                                                                 )
                                                               , Id("run")
                                                               , [ Param(
                                                                     []
                                                                   , ArrayType(
                                                                       ClassOrInterfaceType(
                                                                         TypeName(Id("Event"))
                                                                       , None()
                                                                       )
                                                                     )
                                                                   , Id("es")
                                                                   )
                                                                 ]
                                                               , None()
                                                               )
                                                             , Block(
                                                                 [ForEach(
                                                                    Param(
                                                                      []
                                                                    , ClassOrInterfaceType(
                                                                        TypeName(Id("Event"))
                                                                      , None()
                                                                      )
                                                                    , Id("e")
                                                                    )
                                                                  , ExprName(Id("es"))
                                                                  , ExprStm(
                                                                      Invoke(
                                                                        Method(MethodName(Id("step")))
                                                                      , [ExprName(Id("e"))]
                                                                      )
                                                                    )
                                                                  )|[ Return(
                                                                        Some(ExprName(Id("state")))
                                                                      )
                                                                    ]]
                                                               )
                                                             )|[ MethodDec(
                                                                   MethodDecHead(
                                                                     [Public()]
                                                                   , None()
                                                                   , ClassOrInterfaceType(
                                                                       TypeName(Id("State"))
                                                                     , None()
                                                                     )
                                                                   , Id("currentState")
                                                                   , []
                                                                   , None()
                                                                   )
                                                                 , Block(
                                                                     [ Return(
                                                                         Some(ExprName(Id("state")))
                                                                       )
                                                                     ]
                                                                   )
                                                                 )
                                                               ]]]]]
                                       )]
                           )]
               )
             )
           )
         ]
       )

  id-as-string =
    ?Id(<id>)
    ; !Lit(
         String([Chars(<id>)])
       )

  ensure-list =
    is-list <+ ![<id>]

  event-as-class :
    this__@EventName(name) -> [ClassDec(
                                 ClassDecHead(
                                   [Public()]
                                 , name
                                 , None()
                                 , None()
                                 , Some(
                                     ImplementsDec(
                                       [ InterfaceType(
                                           TypeName(Id("Event"))
                                         , None()
                                         )
                                       ]
                                     )
                                   )
                                 )
                               , ClassBody(
                                   [ConstrDec(
                                      ConstrDecHead(
                                        [Private()]
                                      , None()
                                      , name
                                      , []
                                      , None()
                                      )
                                    , ConstrBody(None(), [])
                                    )|[ MethodDec(
                                          MethodDecHead(
                                            [Public()]
                                          , None()
                                          , ClassOrInterfaceType(
                                              TypeName(Id("String"))
                                            , None()
                                            )
                                          , Id("toString")
                                          , []
                                          , None()
                                          )
                                        , Block(
                                            [ Return(
                                                Some(<<id-as-string> name> this__)
                                              )
                                            ]
                                          )
                                        )
                                      ]]
                                 )
                               )|[ MethodDec(
                                     MethodDecHead(
                                       [Public()]
                                     , None()
                                     , ClassOrInterfaceType(
                                         TypeName(Id("Event"))
                                       , None()
                                       )
                                     , Id(
                                         <conc-strings> ( <?Id(<id>)> Id("event_")
                                                        , <?Id(<id>)> name
                                                        )
                                       )
                                     , []
                                     , None()
                                     )
                                   , Block(
                                       [ Return(
                                           Some(
                                             NewInstance(
                                               None()
                                             , ClassOrInterfaceType(TypeName(name), None())
                                             , []
                                             , None()
                                             )
                                           )
                                         )
                                       ]
                                     )
                                   )
                                 ]]

  all-events-as-classes =
    collect-all(
      ?Events(<id>)
      ; mapconcat(event-as-class ; ensure-list)
    )
    ; concat

  transition-premise :
    Transition(NamedEvent(name), _) -> InstanceOf(
                                         ExprName(Id("e"))
                                       , ClassOrInterfaceType(TypeName(name), None())
                                       )

  transition-consequence :
    Transition(_, state@(Id(_))) -> [ Return(
                                        Some(
                                          ExprName(
                                            Id(
                                              <conc-strings> ( <?Id(<id>)> state
                                                             , <?Id(<id>)> Id("_instance")
                                                             )
                                            )
                                          )
                                        )
                                      )
                                    ]
}