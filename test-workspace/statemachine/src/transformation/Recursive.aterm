Rules(
  [ SDefNoArgs(
      "main"
    , Seq(
        Match(
          NoAnnoList(
            Tuple([Var("model"), Var("model-path"), Var("trans-path")])
          )
        )
      , Seq(
          Build(NoAnnoList(Tuple([Var("model-path"), Var("trans-path")])))
        , Seq(
            AM(
              PrimNoArgs("\"SUGARJ_rename_main_args\"")
            , NoAnnoList(Tuple([Var("old-name"), Var("new-name")]))
            )
          , Seq(
              Where(
                AM(
                  Build(
                    NoAnnoList(
                      Op(
                        "SDefNoArgs"
                      , [ Var("new-name")
                        , NoAnnoList(
                            Op(
                              "Call"
                            , [ NoAnnoList(Op("SVar", [NoAnnoList(Str("\"recursively-transform\""))]))
                              , NoAnnoList(
                                  List(
                                    [ NoAnnoList(Op("Id", []))
                                    , NoAnnoList(
                                        Op(
                                          "CallNoArgs"
                                        , [NoAnnoList(Op("SVar", [Var("old-name")]))]
                                        )
                                      )
                                    ]
                                  )
                                )
                              ]
                            )
                          )
                        ]
                      )
                    )
                  )
                , Var("new-main")
                )
              )
            , Seq(
                Build(Var("model"))
              , Seq(
                  Call(
                    SVar("SugarCompilationUnit")
                  , [ Id()
                    , CallT(
                        SVar("ensure-import")
                      , []
                      , [ NoAnnoList(
                            Op(
                              "TypeImportDec"
                            , [ NoAnnoList(
                                  Op(
                                    "TypeName"
                                  , [ NoAnnoList(
                                        Op(
                                          "PackageOrTypeName"
                                        , [NoAnnoList(Op("Id", [NoAnnoList(Str("\"transformation\""))]))]
                                        )
                                      )
                                    , NoAnnoList(Op("Id", [NoAnnoList(Str("\"Recursive\""))]))
                                    ]
                                  )
                                )
                              ]
                            )
                          )
                        ]
                      )
                    , Call(
                        SVar("map")
                      , [ Call(
                            SVar("SugarDec")
                          , [ Id()
                            , Call(
                                SVar("SugarBody")
                              , [ Seq(
                                    Build(
                                      NoAnnoList(
                                        Tuple(
                                          [NoAnnoList(Op("transformation-elem", [Var("new-main")])), RootApp(Id())]
                                        )
                                      )
                                    )
                                  , CallNoArgs(SVar("conc"))
                                  )
                                ]
                              )
                            ]
                          )
                        ]
                      )
                    ]
                  )
                , Prim("\"SUGARJ_compile\"", [Var("model-path"), Var("trans-path")])
                )
              )
            )
          )
        )
      )
    )
  , SDefT(
      "recursify"
    , []
    , [DefaultVarDec("old-name")]
    , Call(
        SVar("topdown")
      , [ Call(
            SVar("try")
          , [ LRule(
                Rule(
                  Var("s")
                , NoAnnoList(
                    Op(
                      "SDefNoArgs"
                    , [ Var("old-name")
                      , NoAnnoList(
                          Op(
                            "Call"
                          , [ NoAnnoList(Op("SVar", [NoAnnoList(Str("\"recursively-transform\""))]))
                            , NoAnnoList(
                                List([NoAnnoList(Op("Id", [])), Var("trans'")])
                              )
                            ]
                          )
                        )
                      ]
                    )
                  )
                , Seq(
                    AM(
                      BA(
                        Choice(
                          Match(
                            NoAnnoList(Op("SDefNoArgs", [Var("old-name"), RootApp(Id())]))
                          )
                        , Match(
                            NoAnnoList(Op("RDefNoArgs", [Var("old-name"), RootApp(Id())]))
                          )
                        )
                      , Var("s")
                      )
                    , Var("trans")
                    )
                  , Seq(
                      BA(
                        Call(
                          SVar("topdown")
                        , [ Not(
                              Match(
                                NoAnnoList(Op("Prim", [NoAnnoList(Str("\"\\\"SUGARJ_compile\\\"\"")), Wld()]))
                              )
                            )
                          ]
                        )
                      , Var("trans")
                      )
                    , AM(
                        Build(
                          NoAnnoList(
                            Op(
                              "LRule"
                            , [ NoAnnoList(
                                  Op(
                                    "RuleNoCond"
                                  , [ NoAnnoList(Op("Var", [NoAnnoList(Str("\"x__\""))]))
                                    , NoAnnoList(
                                        Op(
                                          "App"
                                        , [ NoAnnoList(
                                              Op(
                                                "Scope"
                                              , [NoAnnoList(List([NoAnnoList(Str("\"x__\""))])), Var("trans")]
                                              )
                                            )
                                          , NoAnnoList(Op("Var", [NoAnnoList(Str("\"x__\""))]))
                                          ]
                                        )
                                      )
                                    ]
                                  )
                                )
                              ]
                            )
                          )
                        )
                      , Var("trans'")
                      )
                    )
                  )
                )
              )
            ]
          )
        ]
      )
    )
  , SDef(
      "recursively-transform"
    , [DefaultVarDec("model-predicate"), DefaultVarDec("trans")]
    , Seq(
        Match(
          NoAnnoList(
            Tuple([Var("model"), Var("model-path"), Var("trans-path")])
          )
        )
      , DynRuleScope(
          [DynRuleScopeId("Renamings")]
        , Seq(
            GenDynRules(
              [DynRuleAssign(DynRuleId(RDecNoArgs("Renamings")), NoAnnoList(List([])))]
            )
          , Seq(
              Build(Var("model"))
            , Seq(
                AM(
                  GuardedLChoice(
                    Where(CallNoArgs(SVar("model-predicate")))
                  , CallNoArgs(SVar("trans"))
                  , Id()
                  )
                , Var("generated")
                )
              , Seq(
                  CallT(
                    SVar("recursively-transform")
                  , [CallNoArgs(SVar("model-predicate")), CallNoArgs(SVar("trans"))]
                  , [Var("trans-path")]
                  )
                , Prim("\"SUGARJ_compile\"", [Var("model-path"), Var("trans-path")])
                )
              )
            )
          )
        )
      )
    )
  , SDefT(
      "recursively-transform"
    , [DefaultVarDec("model-predicate"), DefaultVarDec("trans")]
    , [DefaultVarDec("trans-path")]
    , Seq(
        Call(
          SVar("topdown")
        , [ Call(
              SVar("try")
            , [ Where(
                  Scope(
                    ["pkgs", "name", "model-path", "model", "generated"]
                  , Seq(
                      AM(
                        Call(SVar("get-imported-model"), [CallNoArgs(SVar("model-predicate"))])
                      , NoAnnoList(
                          Tuple(
                            [Var("pkgs"), Var("name"), Var("model-path"), Var("model")]
                          )
                        )
                      )
                    , Seq(
                        AM(
                          BA(CallNoArgs(SVar("trans")), Var("model"))
                        , Var("generated")
                        )
                      , Seq(
                          GenDynRules(
                            [ DynRuleAssign(
                                DynRuleId(RDecNoArgs("Renamings"))
                              , NoAnnoList(
                                  ListTail(
                                    [ NoAnnoList(
                                        Tuple(
                                          [ Var("pkgs")
                                          , Var("name")
                                          , NoAnnoList(
                                              Tuple(
                                                [ App(
                                                    CallNoArgs(SVar("conc-strings"))
                                                  , NoAnnoList(
                                                      Tuple(
                                                        [Var("name"), App(CallNoArgs(SVar("name-suffix")), Var("trans-path"))]
                                                      )
                                                    )
                                                  )
                                                ]
                                              )
                                            )
                                          ]
                                        )
                                      )
                                    ]
                                  , RootApp(CallNoArgs(SVar("Renamings")))
                                  )
                                )
                              )
                            ]
                          )
                        , Seq(
                            Where(
                              CallT(
                                SVar("recursively-transform")
                              , [CallNoArgs(SVar("model-predicate")), CallNoArgs(SVar("trans"))]
                              , [Var("trans-path")]
                              )
                            )
                          , Prim("\"SUGARJ_compile\"", [Var("model-path"), Var("trans-path")])
                          )
                        )
                      )
                    )
                  )
                )
              ]
            )
          ]
        )
      , CallT(
          SVar("apply-renamings")
        , []
        , [RootApp(CallNoArgs(SVar("Renamings")))]
        )
      )
    )
  , SDef(
      "get-imported-model"
    , [DefaultVarDec("predicate")]
    , Seq(
        Match(NoAnnoList(Op("TypeImportDec", [RootApp(Id())])))
      , Seq(
          AM(
            CallNoArgs(SVar("import-model-path"))
          , NoAnnoList(Tuple([Var("pkgs"), Var("name")]))
          )
        , Seq(
            AM(
              BA(
                CallNoArgs(SVar("build-path"))
              , NoAnnoList(Tuple([Var("pkgs"), Var("name")]))
              )
            , Var("path")
            )
          , Seq(
              AM(PrimNoArgs("\"SUGARJ_resolve_model\""), Var("model"))
            , Seq(
                Where(CallNoArgs(SVar("predicate")))
              , Build(
                  NoAnnoList(
                    Tuple(
                      [Var("pkgs"), Var("name"), Var("path"), Var("model")]
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  , SDefT(
      "ensure-import"
    , []
    , [DefaultVarDec("imp")]
    , Seq(
        Build(
          NoAnnoList(
            Tuple(
              [RootApp(Id()), NoAnnoList(List([Var("imp")]))]
            )
          )
        )
      , CallNoArgs(SVar("union"))
      )
    )
  , SDefT(
      "conforms-to-metamodel"
    , []
    , [DefaultVarDec("meta-model")]
    , Call(
        SVar("collect-one")
      , [ Match(
            NoAnnoList(
              Op(
                "ModelBody"
              , [NoAnnoList(Tuple([Var("meta-model"), Wld()]))]
              )
            )
          )
        ]
      )
    )
  ]
)