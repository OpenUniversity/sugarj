module Control.Arrow.Syntax.Statement where


context-free syntax
  "let" HaskellDeclbinds -> ArrStmt {cons("ArrLetStmt")}
  HaskellPat "<-" ArrCommand -> ArrStmt {cons("ArrBindStmt")}
  ArrCommand -> ArrStmt {cons("ArrCmdStmt")}

context-free syntax
  ArrNoOffsideStmtBlock -> ArrStmtList {cons("ArrStmtList")}
  ArrOffsideStmtList   -> ArrStmtList {cons("ArrStmtList")}

  "{" ArrNoOffsideStmtList "}"  -> ArrNoOffsideStmtBlock {bracket, ignore-indent}

context-free syntax
  ArrStmt -> ArrNoOffsideStmtList
  ArrStmt ";" ArrNoOffsideStmtList -> ArrNoOffsideStmtList {cons("ArrStmtSeq")}

  ArrStmt -> ArrOffsideStmt {layout(gt(col(left(1)), col(first(1))))}

  ArrOffsideStmt -> ArrOffsideStmtList
  ArrOffsideStmt ArrOffsideStmtList -> ArrOffsideStmtList
   {cons("ArrStmtSeq"), layout(eq(col(first(1)), col(first(2))))}

