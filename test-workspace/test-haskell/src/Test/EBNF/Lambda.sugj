module Test.EBNF.Lambda where

import Data.EBNF.Syntax
import Data.EBNF.Data
import Data.EBNF.Parser

import Control.Monad.Identity
import Text.Parsec hiding (parse)

Var ::= String {Var}
Exp ::= Var {EVar}
      | "(" Exp Exp ")" {EApp}
      | "lambda" Var "." Exp {EAbs}


ident = "lambda x . x"
zero =  "lambda s . lambda z . z"
suc =  "lambda n . lambda s . lambda z . (s ((n s) z))"

parse p = parseTest (p >>= \x -> eof >> return x)
